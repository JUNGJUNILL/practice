{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, Avatar } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { LOAD_USER_POSTS_REQUEST } from '../reducers/post';\nimport userSaga from '../sagas/user';\n\nconst User = ({\n  id\n}) => {\n  const dispatch = useDispatch();\n  const {\n    mainPosts\n  } = useSelector(state => state.post);\n  const {\n    userInfo\n  } = useSelector(state => state.user);\n  useEffect(() => {\n    dispatch({\n      type: LOAD_USER_POSTS_REQUEST,\n      data: id\n    });\n  }, []);\n  return __jsx(\"div\", null, userInfo ? __jsx(Card, {\n    actions: [__jsx(\"div\", {\n      key: \"twit\"\n    }, \"\\uC9F9\\uC9F9\", __jsx(\"br\", null), userInfo.Posts), __jsx(\"div\", {\n      key: \"following\"\n    }, \"\\uD314\\uB85C\\uC789\", __jsx(\"br\", null), userInfo.Followings), __jsx(\"div\", {\n      key: \"follower\"\n    }, \"\\uD314\\uB85C\\uC6CC\", __jsx(\"br\", null), userInfo.Followers)]\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, null, userInfo.nickname[0]),\n    title: userInfo.nickname\n  })) : null, mainPosts.map((v, i) => __jsx(PostCard, {\n    key: i,\n    post: c\n  })));\n};\n\nUser.propTypes = {\n  id: PropTypes.number.isRequired\n};\n\nUser.getInitialProps = async context => {\n  console.log(context.query.id);\n  return {\n    id: parseInt(context.query.id, 10)\n  };\n};\n\nexport default User;","map":{"version":3,"sources":["D:/git Repository/practice/front/pages/user.js"],"names":["useEffect","PropTypes","Card","Avatar","useDispatch","useSelector","LOAD_USER_POSTS_REQUEST","userSaga","User","id","dispatch","mainPosts","state","post","userInfo","user","type","data","Posts","Followings","Followers","nickname","map","v","i","c","propTypes","number","isRequired","getInitialProps","context","console","log","query","parseInt"],"mappings":";;AAAA,SAAQA,SAAR,QAAwB,OAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAUC,IAAV,EAAeC,MAAf,QAA6B,MAA7B;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAASC,uBAAT,QAAwC,kBAAxC;AACA,OAAOC,QAAP,MAAqB,eAArB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAQ;AAEjB,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAM;AAACO,IAAAA;AAAD,MAAcN,WAAW,CAACO,KAAK,IAAEA,KAAK,CAACC,IAAd,CAA/B;AACA,QAAM;AAACC,IAAAA;AAAD,MAAcT,WAAW,CAACO,KAAK,IAAEA,KAAK,CAACG,IAAd,CAA/B;AACAf,EAAAA,SAAS,CAAC,MAAI;AAEVU,IAAAA,QAAQ,CAAC;AACLM,MAAAA,IAAI,EAACV,uBADA;AAELW,MAAAA,IAAI,EAACR;AAFA,KAAD,CAAR;AAKH,GAPQ,EAOP,EAPO,CAAT;AASA,SACI,mBACCK,QAAQ,GACD,MAAC,IAAD;AACA,IAAA,OAAO,EAAE,CACP;AAAK,MAAA,GAAG,EAAC;AAAT,uBAEE,iBAFF,EAGGA,QAAQ,CAACI,KAHZ,CADO,EAMP;AAAK,MAAA,GAAG,EAAC;AAAT,6BAEE,iBAFF,EAGGJ,QAAQ,CAACK,UAHZ,CANO,EAWP;AAAK,MAAA,GAAG,EAAC;AAAT,6BAEE,iBAFF,EAGGL,QAAQ,CAACM,SAHZ,CAXO;AADT,KAmBA,MAAC,IAAD,CAAM,IAAN;AACE,IAAA,MAAM,EAAE,MAAC,MAAD,QAASN,QAAQ,CAACO,QAAT,CAAkB,CAAlB,CAAT,CADV;AAEE,IAAA,KAAK,EAAEP,QAAQ,CAACO;AAFlB,IAnBA,CADC,GAyBJ,IA1BL,EA4BCV,SAAS,CAACW,GAAV,CAAc,CAACC,CAAD,EAAGC,CAAH,KACX,MAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,CAAf;AAAkB,IAAA,IAAI,EAAEC;AAAxB,IADH,CA5BD,CADJ;AAkCH,CAhDD;;AAkDAjB,IAAI,CAACkB,SAAL,GAAiB;AACbjB,EAAAA,EAAE,EAAGR,SAAS,CAAC0B,MAAV,CAAiBC;AADT,CAAjB;;AAIApB,IAAI,CAACqB,eAAL,GAAuB,MAAOC,OAAP,IAAkB;AAErCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAO,CAACG,KAAR,CAAcxB,EAA1B;AACA,SAAO;AAACA,IAAAA,EAAE,EAAEyB,QAAQ,CAACJ,OAAO,CAACG,KAAR,CAAcxB,EAAf,EAAkB,EAAlB;AAAb,GAAP;AACH,CAJD;;AAMA,eAAeD,IAAf","sourcesContent":["import {useEffect} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport  { Card,Avatar } from 'antd'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport { LOAD_USER_POSTS_REQUEST } from '../reducers/post';\r\nimport userSaga from '../sagas/user';\r\n\r\nconst User = ({id})=>{\r\n\r\n    const dispatch = useDispatch(); \r\n    const {mainPosts} = useSelector(state=>state.post); \r\n    const {userInfo}  = useSelector(state=>state.user); \r\n    useEffect(()=>{\r\n\r\n        dispatch({\r\n            type:LOAD_USER_POSTS_REQUEST,\r\n            data:id,\r\n        }); \r\n        \r\n    },[])\r\n\r\n    return (\r\n        <div>\r\n        {userInfo\r\n            ?(  <Card\r\n                actions={[\r\n                  <div key=\"twit\">\r\n                    짹짹\r\n                    <br />\r\n                    {userInfo.Posts}\r\n                  </div>,\r\n                  <div key=\"following\">\r\n                    팔로잉\r\n                    <br />\r\n                    {userInfo.Followings}\r\n                  </div>,\r\n                  <div key=\"follower\">\r\n                    팔로워\r\n                    <br />\r\n                    {userInfo.Followers}\r\n                  </div>,\r\n                ]}\r\n              >\r\n                <Card.Meta\r\n                  avatar={<Avatar>{userInfo.nickname[0]}</Avatar>}\r\n                  title={userInfo.nickname}\r\n                />\r\n              </Card>)  \r\n            :null\r\n        }\r\n        {mainPosts.map((v,i)=>(\r\n            <PostCard key={i} post={c} />\r\n        ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nUser.propTypes = {\r\n    id : PropTypes.number.isRequired,\r\n};\r\n\r\nUser.getInitialProps = async (context) =>{\r\n    \r\n    console.log(context.query.id);\r\n    return {id: parseInt(context.query.id,10)};\r\n}\r\n\r\nexport default User; \r\n"]},"metadata":{},"sourceType":"module"}