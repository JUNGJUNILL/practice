{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useCallback } from 'react';\nimport { Button, List, Card } from 'antd';\nimport { StopOutlined } from '@ant-design/icons';\nimport { useDispatch, useSelector } from 'react-redux';\nimport NicknameEditForm from '../components/NicknameEditForm';\nimport { LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWINGS_REQUEST } from '../reducers/user';\nimport { LOAD_USER_POSTS_REQUEST } from '../reducers/post';\nimport PostCard from '../components/PostCard';\n\nvar Profile = function Profile() {\n  var dispactch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me,\n      followerList = _useSelector.followerList,\n      followingList = _useSelector.followingList;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector2.mainPosts;\n\n  useEffect(function () {\n    dispactch({\n      type: LOAD_FOLLOWERS_REQUEST //  data: me.id, \n\n    });\n    dispactch({\n      type: LOAD_FOLLOWINGS_REQUEST //   data: me.id, \n\n    });\n    dispactch({\n      type: LOAD_USER_POSTS_REQUEST //    data: me.id, \n\n    });\n  }, []);\n  var onUnfollow = useCallback(function (userId) {\n    return function () {};\n  }, []);\n  var onRemoveFollower = useCallback(function (userId) {\n    return function () {};\n  }, []);\n  return __jsx(\"div\", null, __jsx(NicknameEditForm, null), __jsx(List, {\n    style: {\n      marginBottom: '20PX'\n    },\n    grid: {\n      gutter: 4,\n      xs: 2,\n      md: 3\n    },\n    size: \"small\",\n    header: __jsx(\"div\", null, \"\\uD314\\uB85C\\uC789 \\uBAA9\\uB85D\"),\n    loadMore: __jsx(Button, {\n      style: {\n        width: '100%'\n      }\n    }, \"\\uB354 \\uBCF4\\uAE30\"),\n    bordered: true,\n    dataSource: followingList,\n    renderItem: function renderItem(item) {\n      return __jsx(List.Item, {\n        style: {\n          marginTop: '20px'\n        }\n      }, __jsx(Card, {\n        key: \"stop\",\n        actions: [__jsx(StopOutlined, {\n          onClick: onUnfollow(item.id)\n        })]\n      }, __jsx(Card.Meta, {\n        description: item.nickname\n      })));\n    }\n  }), __jsx(List, {\n    style: {\n      marginBottom: '20PX'\n    },\n    grid: {\n      gutter: 4,\n      xs: 2,\n      md: 3\n    },\n    size: \"small\",\n    header: __jsx(\"div\", null, \"\\uD314\\uB85C\\uC6CC \\uBAA9\\uB85D\"),\n    loadMore: __jsx(Button, {\n      style: {\n        width: '100%'\n      }\n    }, \"\\uB354 \\uBCF4\\uAE30\"),\n    bordered: true,\n    dataSource: followerList,\n    renderItem: function renderItem(item) {\n      return __jsx(List.Item, {\n        style: {\n          marginTop: '20px'\n        }\n      }, __jsx(Card, {\n        key: \"stop\",\n        actions: [__jsx(StopOutlined, {\n          onClick: onRemoveFollower(item.id)\n        })]\n      }, __jsx(Card.Meta, {\n        description: item.nickname\n      })));\n    }\n  }), __jsx(\"div\", null, mainPosts.map(function (v, i) {\n    return __jsx(PostCard, {\n      key: i,\n      post: v\n    });\n  })));\n};\n\nexport default Profile;","map":{"version":3,"sources":["D:/git Repository/practice/front/pages/profile.js"],"names":["React","useEffect","useCallback","Button","List","Card","StopOutlined","useDispatch","useSelector","NicknameEditForm","LOAD_FOLLOWERS_REQUEST","LOAD_FOLLOWINGS_REQUEST","LOAD_USER_POSTS_REQUEST","PostCard","Profile","dispactch","state","user","me","followerList","followingList","post","mainPosts","type","onUnfollow","userId","onRemoveFollower","marginBottom","gutter","xs","md","width","item","marginTop","id","nickname","map","v","i"],"mappings":"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","sourcesContent":["import React , {useEffect,useCallback} from 'react'\r\nimport { Button , List,  Card} from 'antd'\r\nimport {StopOutlined \r\n} from '@ant-design/icons';\r\nimport {useDispatch ,useSelector} from 'react-redux'\r\nimport NicknameEditForm from '../components/NicknameEditForm'\r\nimport { LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWINGS_REQUEST } from '../reducers/user';\r\nimport { LOAD_USER_POSTS_REQUEST } from '../reducers/post';\r\nimport PostCard from '../components/PostCard'; \r\n\r\nconst Profile = ()=>{\r\n\r\n\r\n\r\n    const dispactch  = useDispatch(); \r\n    const {me ,followerList, followingList } = useSelector(state=>state.user); \r\n    const {mainPosts} = useSelector(state=>state.post); \r\n    \r\n    useEffect(()=>{\r\n\r\n        dispactch({\r\n            type: LOAD_FOLLOWERS_REQUEST, \r\n          //  data: me.id, \r\n        }); \r\n\r\n\r\n        dispactch({\r\n            type: LOAD_FOLLOWINGS_REQUEST, \r\n         //   data: me.id, \r\n        });\r\n\r\n\r\n        dispactch({\r\n            type: LOAD_USER_POSTS_REQUEST, \r\n        //    data: me.id, \r\n        });\r\n\r\n\r\n    },[]); \r\n\r\n\r\n    const onUnfollow = useCallback(userId=>()=>{\r\n\r\n    },[])\r\n\r\n    const onRemoveFollower =useCallback(userId=>()=>{\r\n\r\n    },[])\r\n\r\n\r\n    return (\r\n       \r\n        <div>\r\n          \r\n                <NicknameEditForm />\r\n                <List \r\n                    style={{marginBottom:'20PX'}}\r\n                    grid={{gutter:4 , xs : 2, md : 3}}\r\n                    size=\"small\"\r\n                    header={<div>팔로잉 목록</div>}\r\n                    loadMore={<Button style={{width:'100%'}}>더 보기</Button>}\r\n                    bordered\r\n                    dataSource={followingList}\r\n                    renderItem={item=>(\r\n                        <List.Item style={{marginTop:'20px'}}>\r\n                            <Card key='stop' actions={[<StopOutlined onClick={onUnfollow(item.id)}/>]}>\r\n                                <Card.Meta description={item.nickname}/></Card>\r\n                        </List.Item>\r\n                    )}\r\n                />\r\n                 <List \r\n                    style={{marginBottom:'20PX'}}\r\n                    grid={{gutter:4 , xs : 2, md : 3}}\r\n                    size=\"small\"\r\n                    header={<div>팔로워 목록</div>}\r\n                    loadMore={<Button style={{width:'100%'}}>더 보기</Button>}\r\n                    bordered\r\n                    dataSource={followerList}\r\n                    renderItem={item=>(\r\n                        <List.Item style={{marginTop:'20px'}}>\r\n                            <Card key='stop' actions={[<StopOutlined onClick={onRemoveFollower(item.id)}/>]}>\r\n                                <Card.Meta description={item.nickname}/></Card>\r\n                        </List.Item>\r\n                    )}\r\n                />\r\n                <div>\r\n                    {mainPosts.map((v,i)=>(\r\n                        <PostCard key={i} post={v} />\r\n                    ))}\r\n                </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default  Profile; "]},"metadata":{},"sourceType":"module"}