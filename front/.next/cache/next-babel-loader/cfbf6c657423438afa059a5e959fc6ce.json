{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useCallback, useState } from 'react';\nimport { Form, Button, Input } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ADD_POST_REQUEST } from '../reducers/post';\n\nvar PostForm = function PostForm(_ref) {\n  var userInfo = _ref.userInfo;\n  var dispatch = useDispatch();\n\n  var _useState = useState(''),\n      text = _useState[0],\n      setText = _useState[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      imagePaths = _useSelector.imagePaths,\n      isAddingPost = _useSelector.isAddingPost,\n      postAdded = _useSelector.postAdded;\n\n  useEffect(function () {\n    setText('');\n  }, [postAdded === true]);\n  var onSubmitForm = useCallback(function (e) {\n    //e.preventDefault();\n    if (!text || !text.trim()) {\n      alert('게시글을 입력해 주세요');\n      return;\n    }\n\n    dispatch({\n      type: ADD_POST_REQUEST,\n      data: {\n        content: text,\n        UserId: userInfo.id\n      }\n    });\n  }, [text]);\n  var onChangeText = useCallback(function (e) {\n    setText(e.target.value);\n  }, []);\n  return __jsx(Form, {\n    style: {\n      margin: '10px 0 20px'\n    },\n    encType: \"multipart/form-data\",\n    onFinish: onSubmitForm\n  }, __jsx(Input.TextArea, {\n    maxLength: 140,\n    placeholder: \"\\uC5B4\\uB5A4\\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\",\n    value: text,\n    onChange: onChangeText\n  }), __jsx(\"div\", null, __jsx(\"input\", {\n    type: \"file\",\n    multiple: true,\n    hidden: true\n  }), __jsx(Button, null, \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"), __jsx(Button, {\n    type: \"primary\",\n    style: {\n      \"float\": 'right'\n    },\n    htmlType: \"submit\",\n    loading: isAddingPost\n  }, \"\\uC9F9\\uC9F9\")), __jsx(\"div\", null, imagePaths.map(function (v, i) {\n    return __jsx(\"div\", {\n      key: i,\n      style: {\n        display: 'inline-block'\n      }\n    }, __jsx(\"img\", {\n      src: v,\n      style: {\n        width: '200px'\n      },\n      alt: v\n    }), __jsx(\"div\", null, __jsx(Button, null, \"\\uC81C\\uAC70\")));\n  })));\n};\n\nexport default PostForm;","map":{"version":3,"sources":["D:/git Repository/practice/front/components/PostForm.js"],"names":["React","useEffect","useCallback","useState","Form","Button","Input","useDispatch","useSelector","ADD_POST_REQUEST","PostForm","userInfo","dispatch","text","setText","state","post","imagePaths","isAddingPost","postAdded","onSubmitForm","e","trim","alert","type","data","content","UserId","id","onChangeText","target","value","margin","map","v","i","display","width"],"mappings":"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","sourcesContent":["import React,{useEffect, useCallback, useState} from 'react'\r\nimport {Form, Button,Input}from 'antd'\r\n\r\nimport {useDispatch ,useSelector} from 'react-redux'\r\nimport { ADD_POST_REQUEST } from '../reducers/post';\r\n\r\n\r\n\r\nconst PostForm = ({userInfo}) =>{\r\n\r\n    const dispatch=useDispatch();\r\n    const [text,setText] = useState(''); \r\n    const {imagePaths, isAddingPost, postAdded} = useSelector(state=>state.post);\r\n    useEffect(()=>{\r\n        setText(''); \r\n    },[postAdded === true])\r\n\r\n    const onSubmitForm = useCallback((e)=>{\r\n        //e.preventDefault();\r\n        if(!text || !text.trim()){\r\n            alert('게시글을 입력해 주세요'); \r\n            return; \r\n        }\r\n        dispatch({\r\n                type:ADD_POST_REQUEST,\r\n                data: {\r\n                  content : text,\r\n                  UserId  : userInfo.id,\r\n                    },\r\n            });\r\n\r\n    },[text]); \r\n    \r\n\r\n\r\n    const onChangeText =useCallback( (e)=>{\r\n        setText(e.target.value); \r\n    },[]); \r\n\r\n    return(\r\n            \r\n                <Form style={{margin:'10px 0 20px'}} encType=\"multipart/form-data\" onFinish={onSubmitForm}>               \r\n                        \r\n                        <Input.TextArea maxLength={140} placeholder=\"어떤일이 있었나요?\" value={text} onChange={onChangeText} />\r\n                        <div>\r\n                            <input type=\"file\" multiple hidden />\r\n                            <Button>이미지 업로드</Button>\r\n                            <Button type=\"primary\" style={{float:'right'}} htmlType=\"submit\" loading={isAddingPost}>짹짹</Button>\r\n                        </div>\r\n                        <div>\r\n                        {imagePaths.map((v,i)=>{\r\n                            return (\r\n\r\n                                <div key={i} style={{display:'inline-block'}}>\r\n                                <img src={v} style={{width:'200px' }} alt={v} />\r\n                                <div>\r\n                                    <Button>제거</Button>\r\n                                </div>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                        </div>\r\n                </Form>\r\n            )\r\n}\r\nexport default PostForm; "]},"metadata":{},"sourceType":"module"}