{"ast":null,"code":"import { all, fork, takeLatest, put, delay } from 'redux-saga/effects';\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS } from '../reducers/post';\n\nfunction addPostAPI() {}\n\nfunction* addPost() {\n  try {\n    yield delay(2000);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: {\n        postId: action.data.postId\n      }\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: ADD_POST_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* whatchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction addCommentAPI() {}\n\nfunction* addComment(action) {\n  try {\n    yield delay(2000);\n    yield put({\n      type: ADD_COMMENT_SUCCESS\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      error: e\n    });\n  }\n}\n\nfunction* whatchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* postSaga() {\n  yield all([fork(whatchAddPost), fork(whatchAddComment)]);\n}","map":{"version":3,"sources":["D:/git Repository/practice/front/sagas/post.js"],"names":["all","fork","takeLatest","put","delay","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","addPostAPI","addPost","type","data","postId","action","e","console","error","whatchAddPost","addCommentAPI","addComment","whatchAddComment","postSaga"],"mappings":"AAAA,SAAQA,GAAR,EAAYC,IAAZ,EAAiBC,UAAjB,EAA6BC,GAA7B,EAAkCC,KAAlC,QAA8C,oBAA9C;AACA,SAASC,gBAAT,EAA2BC,gBAA3B,EAA6CC,gBAA7C,EAA+DC,mBAA/D,EAAoFC,mBAApF,QAA+G,kBAA/G;;AAEA,SAASC,UAAT,GAAqB,CAEpB;;AACD,UAAUC,OAAV,GAAmB;AAEf,MAAG;AACK,UAAMP,KAAK,CAAC,IAAD,CAAX;AACA,UAAMD,GAAG,CAAC;AACNS,MAAAA,IAAI,EAACN,gBADC;AAENO,MAAAA,IAAI,EAAC;AACDC,QAAAA,MAAM,EAACC,MAAM,CAACF,IAAP,CAAYC;AADlB;AAFC,KAAD,CAAT;AAOP,GATD,CASC,OAAME,CAAN,EAAQ;AACLC,IAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACA,UAAMb,GAAG,CAAC;AACNS,MAAAA,IAAI,EAACL,gBADC;AAENW,MAAAA,KAAK,EAAEF;AAFD,KAAD,CAAT;AAKH;AAGJ;;AACD,UAAUG,aAAV,GAAyB;AACrB,QAAMjB,UAAU,CAACG,gBAAD,EAAkBM,OAAlB,CAAhB;AAEH;;AAKD,SAASS,aAAT,GAAwB,CAEvB;;AAED,UAAUC,UAAV,CAAqBN,MAArB,EAA4B;AAExB,MAAG;AACC,UAAMX,KAAK,CAAC,IAAD,CAAX;AACA,UAAMD,GAAG,CAAC;AACNS,MAAAA,IAAI,EAACH;AADC,KAAD,CAAT;AAIP,GANG,CAMH,OAAMO,CAAN,EAAQ;AACLC,IAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACA,UAAMb,GAAG,CAAC;AACNS,MAAAA,IAAI,EAACH,mBADC;AAENS,MAAAA,KAAK,EAAEF;AAFD,KAAD,CAAT;AAKH;AAGA;;AAED,UAAUM,gBAAV,GAA4B;AAExB,QAAMpB,UAAU,CAACM,mBAAD,EAAsBa,UAAtB,CAAhB;AAEH;;AAGD,eAAe,UAAUE,QAAV,GAAqB;AAEnC,QAAMvB,GAAG,CAAC,CACNC,IAAI,CAACkB,aAAD,CADE,EAENlB,IAAI,CAACqB,gBAAD,CAFE,CAAD,CAAT;AAKA","sourcesContent":["import {all,fork,takeLatest, put, delay} from 'redux-saga/effects'; \r\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS } from '../reducers/post';\r\n\r\nfunction addPostAPI(){\r\n\r\n}\r\nfunction* addPost(){\r\n\r\n    try{\r\n            yield delay(2000);\r\n            yield put({\r\n                type:ADD_POST_SUCCESS,\r\n                data:{\r\n                    postId:action.data.postId,\r\n                },\r\n            });\r\n\r\n    }catch(e){\r\n        console.error(e); \r\n        yield put({\r\n            type:ADD_POST_FAILURE,\r\n            error: e,\r\n        })\r\n      \r\n    }\r\n\r\n\r\n}\r\nfunction* whatchAddPost(){\r\n    yield takeLatest(ADD_POST_REQUEST,addPost); \r\n\r\n}\r\n\r\n\r\n\r\n\r\nfunction addCommentAPI(){\r\n\r\n}\r\n\r\nfunction* addComment(action){\r\n\r\n    try{\r\n        yield delay(2000);\r\n        yield put({\r\n            type:ADD_COMMENT_SUCCESS,\r\n        });\r\n\r\n}catch(e){\r\n    console.error(e); \r\n    yield put({\r\n        type:ADD_COMMENT_SUCCESS,\r\n        error: e,\r\n    })\r\n  \r\n}\r\n\r\n\r\n}\r\n\r\nfunction* whatchAddComment(){\r\n\r\n    yield takeLatest(ADD_COMMENT_REQUEST, addComment); \r\n    \r\n}\r\n\r\n\r\nexport default function* postSaga() {\r\n\r\n yield all([\r\n     fork(whatchAddPost), \r\n     fork(whatchAddComment), \r\n ]); \r\n\r\n}"]},"metadata":{},"sourceType":"module"}