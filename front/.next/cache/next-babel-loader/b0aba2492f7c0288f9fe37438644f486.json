{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(loginAPI),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(signUpAPI),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(logoutAPI),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(followAPI),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(unFollowAPI),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogin),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(watchSignUp),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogout),\n    _marked9 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadUser),\n    _marked10 = /*#__PURE__*/_regeneratorRuntime.mark(watchFollowUser),\n    _marked11 = /*#__PURE__*/_regeneratorRuntime.mark(watchUnFollowUser),\n    _marked12 = /*#__PURE__*/_regeneratorRuntime.mark(login),\n    _marked13 = /*#__PURE__*/_regeneratorRuntime.mark(signUp),\n    _marked14 = /*#__PURE__*/_regeneratorRuntime.mark(logout),\n    _marked15 = /*#__PURE__*/_regeneratorRuntime.mark(loadUser),\n    _marked16 = /*#__PURE__*/_regeneratorRuntime.mark(follow),\n    _marked17 = /*#__PURE__*/_regeneratorRuntime.mark(unFollow),\n    _marked18 = /*#__PURE__*/_regeneratorRuntime.mark(hello),\n    _marked19 = /*#__PURE__*/_regeneratorRuntime.mark(watchHello),\n    _marked20 = /*#__PURE__*/_regeneratorRuntime.mark(loadFollowersAPI),\n    _marked21 = /*#__PURE__*/_regeneratorRuntime.mark(loadFollowers),\n    _marked22 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadFollowers),\n    _marked23 = /*#__PURE__*/_regeneratorRuntime.mark(loadFollowingsAPI),\n    _marked24 = /*#__PURE__*/_regeneratorRuntime.mark(loadFollowings),\n    _marked25 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadFollowings),\n    _marked26 = /*#__PURE__*/_regeneratorRuntime.mark(removeFollowerAPI),\n    _marked27 = /*#__PURE__*/_regeneratorRuntime.mark(removeFollower),\n    _marked28 = /*#__PURE__*/_regeneratorRuntime.mark(watchRemoveFollower),\n    _marked29 = /*#__PURE__*/_regeneratorRuntime.mark(editNickname),\n    _marked30 = /*#__PURE__*/_regeneratorRuntime.mark(watchEditNickname),\n    _marked31 = /*#__PURE__*/_regeneratorRuntime.mark(userSaga);\n\nimport { all, fork, takeLatest, call, put, delay, takeEvery, take } from 'redux-saga/effects'; //이 외에도\n// race, cancel, select, throttle, debounce 등 도 있다. \n\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, SIGN_UP_REQUEST, SIGN_UP_FAILURE, SIGN_UP_SUCCESS, LOG_OUT_REQUEST, LOG_OUT_FAILURE, LOG_OUT_SUCCESS, LOAD_USER_SUCCESS, LOAD_USER_FAILURE, LOAD_USER_REQUEST, FOLLOW_USER_REQUEST, UNFOLLOW_USER_REQUEST, FOLLOW_USER_SUCCESS, FOLLOW_USER_FAILURE, UNFOLLOW_USER_SUCCESS, UNFOLLOW_USER_FAILURE, LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWERS_SUCCESS, LOAD_FOLLOWERS_FAILURE, LOAD_FOLLOWINGS_REQUEST, LOAD_FOLLOWINGS_SUCCESS, LOAD_FOLLOWINGS_FAILURE, REMOVE_FOLLOWER_SUCCESS, REMOVE_FOLLOWER_FAILURE, REMOVE_FOLLOWER_REQUEST, EDIT_NICKNAME_REQUEST, EDIT_NICKNAME_FAILURE, EDIT_NICKNAME_SUCCESS } from '../reducers/user';\nimport axios from 'axios'; //call : 함수 동기적 호출   (순서를 지켜서 실행해야 하는 경우)\n//fort : 함수 비동기적 호출  \n//---------------------------둘 다 함수를 실행시켜준다.\n//put  : 액션 , 사가의 dispatch\n//take : 해당 액션이 dispatch되면 제너레이터를 next하는 이펙트 \n//all  : 여러 이펙트를 동시에 실행 할 수 있게 합니다.\n\nexport var HELLO_SAGA = 'HELLO_SAGA'; //-----------------------------------API\n\nfunction loginAPI(loginData) {\n  return _regeneratorRuntime.wrap(function loginAPI$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          return _context.abrupt(\"return\", axios.post('/user/login', loginData, {\n            withCredentials: true\n          }));\n\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n} //▲백엔드와 프론트간에 쿠키를 주고 받을 수 있다.\n\n\nfunction signUpAPI(signUpData) {\n  return _regeneratorRuntime.wrap(function signUpAPI$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          return _context2.abrupt(\"return\", axios.post('/user/signUp', signUpData, {\n            withCredentials: true\n          }));\n\n        case 1:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nfunction logoutAPI() {\n  return _regeneratorRuntime.wrap(function logoutAPI$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          return _context3.abrupt(\"return\", axios.post('/user/logout', {}, {\n            withCredentials: true\n          }));\n\n        case 1:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n} // function* loadUserAPI(userId){\n//     return axios.get(userId? `/user/${userId}`:'/user/',{withCredentials:true}); \n// }\n\n\nfunction loadUserAPI(userId) {\n  // 서버에 요청을 보내는 부분\n  return axios.get(userId ? \"/user/\".concat(userId) : '/user/', {\n    withCredentials: true\n  });\n}\n\nfunction followAPI(userId) {\n  return _regeneratorRuntime.wrap(function followAPI$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          return _context4.abrupt(\"return\", axios.post(\"/user/\".concat(userId, \"/follow\"), {}, {\n            withCredentials: true\n          }));\n\n        case 1:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\n\nfunction unFollowAPI(userId) {\n  return _regeneratorRuntime.wrap(function unFollowAPI$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          return _context5.abrupt(\"return\", axios[\"delete\"](\"/user/\".concat(userId, \"/follow\"), {\n            withCredentials: true\n          }));\n\n        case 1:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5);\n} //-----------------------------------END API\n//-----------------------------------WATCH\n\n\nfunction watchLogin() {\n  return _regeneratorRuntime.wrap(function watchLogin$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeEvery(LOG_IN_REQUEST, login);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}\n\nfunction watchSignUp() {\n  return _regeneratorRuntime.wrap(function watchSignUp$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return takeEvery(SIGN_UP_REQUEST, signUp);\n\n        case 2:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7);\n}\n\nfunction watchLogout() {\n  return _regeneratorRuntime.wrap(function watchLogout$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return takeEvery(LOG_OUT_REQUEST, logout);\n\n        case 2:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8);\n}\n\nfunction watchLoadUser() {\n  return _regeneratorRuntime.wrap(function watchLoadUser$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.next = 2;\n          return takeEvery(LOAD_USER_REQUEST, loadUser);\n\n        case 2:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9);\n}\n\nfunction watchFollowUser() {\n  return _regeneratorRuntime.wrap(function watchFollowUser$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.next = 2;\n          return takeEvery(FOLLOW_USER_REQUEST, follow);\n\n        case 2:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked10);\n}\n\nfunction watchUnFollowUser() {\n  return _regeneratorRuntime.wrap(function watchUnFollowUser$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.next = 2;\n          return takeLatest(UNFOLLOW_USER_REQUEST, unFollow);\n\n        case 2:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked11);\n} //-----------------------------------END WATCH \n\n\nfunction login(action) {\n  var result, loginInfo;\n  return _regeneratorRuntime.wrap(function login$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          _context12.prev = 0;\n          _context12.next = 3;\n          return call(loginAPI, action.data);\n\n        case 3:\n          result = _context12.sent;\n          _context12.next = 6;\n          return result.then(function (resolve) {\n            return resolve.data;\n          });\n\n        case 6:\n          loginInfo = _context12.sent;\n          _context12.next = 9;\n          return put({\n            type: LOG_IN_SUCCESS,\n            data: loginInfo\n          });\n\n        case 9:\n          _context12.next = 16;\n          break;\n\n        case 11:\n          _context12.prev = 11;\n          _context12.t0 = _context12[\"catch\"](0);\n          console.error(_context12.t0);\n          _context12.next = 16;\n          return put({\n            type: LOG_IN_FAILURE\n          });\n\n        case 16:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, _marked12, null, [[0, 11]]);\n}\n\nfunction signUp(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function signUp$(_context13) {\n    while (1) {\n      switch (_context13.prev = _context13.next) {\n        case 0:\n          _context13.prev = 0;\n          _context13.next = 3;\n          return call(signUpAPI, action.data);\n\n        case 3:\n          result = _context13.sent;\n          _context13.next = 6;\n          return put({\n            type: SIGN_UP_SUCCESS\n          });\n\n        case 6:\n          _context13.next = 13;\n          break;\n\n        case 8:\n          _context13.prev = 8;\n          _context13.t0 = _context13[\"catch\"](0);\n          console.error(_context13.t0);\n          _context13.next = 13;\n          return put({\n            type: SIGN_UP_FAILURE\n          });\n\n        case 13:\n        case \"end\":\n          return _context13.stop();\n      }\n    }\n  }, _marked13, null, [[0, 8]]);\n}\n\nfunction logout() {\n  return _regeneratorRuntime.wrap(function logout$(_context14) {\n    while (1) {\n      switch (_context14.prev = _context14.next) {\n        case 0:\n          _context14.prev = 0;\n          _context14.next = 3;\n          return call(logoutAPI);\n\n        case 3:\n          _context14.next = 5;\n          return put({\n            type: LOG_OUT_SUCCESS\n          });\n\n        case 5:\n          _context14.next = 12;\n          break;\n\n        case 7:\n          _context14.prev = 7;\n          _context14.t0 = _context14[\"catch\"](0);\n          console.error(_context14.t0);\n          _context14.next = 12;\n          return put({\n            type: LOG_OUT_FAILURE\n          });\n\n        case 12:\n        case \"end\":\n          return _context14.stop();\n      }\n    }\n  }, _marked14, null, [[0, 7]]);\n}\n\nfunction loadUser(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadUser$(_context15) {\n    while (1) {\n      switch (_context15.prev = _context15.next) {\n        case 0:\n          _context15.prev = 0;\n          _context15.next = 3;\n          return call(loadUserAPI, action.data);\n\n        case 3:\n          result = _context15.sent;\n          _context15.next = 6;\n          return put({\n            type: LOAD_USER_SUCCESS,\n            data: result.data,\n            me: !action.data\n          });\n\n        case 6:\n          _context15.next = 13;\n          break;\n\n        case 8:\n          _context15.prev = 8;\n          _context15.t0 = _context15[\"catch\"](0);\n          console.error(_context15.t0);\n          _context15.next = 13;\n          return put({\n            type: LOAD_USER_FAILURE,\n            error: _context15.t0\n          });\n\n        case 13:\n        case \"end\":\n          return _context15.stop();\n      }\n    }\n  }, _marked15, null, [[0, 8]]);\n}\n\nfunction follow(action) {\n  var result, followInfo;\n  return _regeneratorRuntime.wrap(function follow$(_context16) {\n    while (1) {\n      switch (_context16.prev = _context16.next) {\n        case 0:\n          _context16.prev = 0;\n          _context16.next = 3;\n          return call(followAPI, action.data);\n\n        case 3:\n          result = _context16.sent;\n          console.log('result==>', result);\n          _context16.next = 7;\n          return result.then(function (resolve) {\n            return resolve.data;\n          });\n\n        case 7:\n          followInfo = _context16.sent;\n          console.log('followInfo==>', followInfo);\n          _context16.next = 11;\n          return put({\n            type: FOLLOW_USER_SUCCESS,\n            data: followInfo\n          });\n\n        case 11:\n          _context16.next = 18;\n          break;\n\n        case 13:\n          _context16.prev = 13;\n          _context16.t0 = _context16[\"catch\"](0);\n          console.error(_context16.t0);\n          _context16.next = 18;\n          return put({\n            type: FOLLOW_USER_FAILURE,\n            error: _context16.t0\n          });\n\n        case 18:\n        case \"end\":\n          return _context16.stop();\n      }\n    }\n  }, _marked16, null, [[0, 13]]);\n}\n\nfunction unFollow(action) {\n  var result, unFollowInfo;\n  return _regeneratorRuntime.wrap(function unFollow$(_context17) {\n    while (1) {\n      switch (_context17.prev = _context17.next) {\n        case 0:\n          _context17.prev = 0;\n          _context17.next = 3;\n          return call(unFollowAPI, action.data);\n\n        case 3:\n          result = _context17.sent;\n          _context17.next = 6;\n          return result.then(function (resolve) {\n            return resolve.data;\n          });\n\n        case 6:\n          unFollowInfo = _context17.sent;\n          _context17.next = 9;\n          return put({\n            type: UNFOLLOW_USER_SUCCESS,\n            data: unFollowInfo\n          });\n\n        case 9:\n          _context17.next = 16;\n          break;\n\n        case 11:\n          _context17.prev = 11;\n          _context17.t0 = _context17[\"catch\"](0);\n          console.error(_context17.t0);\n          _context17.next = 16;\n          return put({\n            type: UNFOLLOW_USER_FAILURE,\n            error: _context17.t0\n          });\n\n        case 16:\n        case \"end\":\n          return _context17.stop();\n      }\n    }\n  }, _marked17, null, [[0, 11]]);\n}\n\nfunction hello() {\n  return _regeneratorRuntime.wrap(function hello$(_context18) {\n    while (1) {\n      switch (_context18.prev = _context18.next) {\n        case 0:\n          _context18.next = 2;\n          return delay(1000);\n\n        case 2:\n          _context18.next = 4;\n          return put({\n            type: 'Bye Saga'\n          });\n\n        case 4:\n        case \"end\":\n          return _context18.stop();\n      }\n    }\n  }, _marked18);\n}\n\nfunction watchHello() {\n  return _regeneratorRuntime.wrap(function watchHello$(_context19) {\n    while (1) {\n      switch (_context19.prev = _context19.next) {\n        case 0:\n          _context19.next = 2;\n          return takeLatest(HELLO_SAGA, hello);\n\n        case 2:\n        case \"end\":\n          return _context19.stop();\n      }\n    }\n  }, _marked19);\n} //이 기능을 takeLatest , takeEvery 로 대체할 수 있다. \n// function* watchHello(){\n//     console.log('before saga'); \n//     while(true){\n//         yield take(HELLO_SAGA); \n//         console.log('hello saga'); \n//     }\n// }\n//, offset = 0, limit = 3 \n\n\nfunction loadFollowersAPI(userId) {\n  return _regeneratorRuntime.wrap(function loadFollowersAPI$(_context20) {\n    while (1) {\n      switch (_context20.prev = _context20.next) {\n        case 0:\n          return _context20.abrupt(\"return\", axios.get(\"/user/\".concat(0, \"/followers\"), {\n            withCredentials: true\n          }));\n\n        case 1:\n        case \"end\":\n          return _context20.stop();\n      }\n    }\n  }, _marked20);\n}\n\nfunction loadFollowers(action) {\n  var result, followerList;\n  return _regeneratorRuntime.wrap(function loadFollowers$(_context21) {\n    while (1) {\n      switch (_context21.prev = _context21.next) {\n        case 0:\n          _context21.prev = 0;\n          _context21.next = 3;\n          return call(loadFollowersAPI, action.data);\n\n        case 3:\n          result = _context21.sent;\n          _context21.next = 6;\n          return result.then(function (resolve) {\n            return resolve.data;\n          });\n\n        case 6:\n          followerList = _context21.sent;\n          _context21.next = 9;\n          return put({\n            type: LOAD_FOLLOWERS_SUCCESS,\n            data: followerList\n          });\n\n        case 9:\n          _context21.next = 16;\n          break;\n\n        case 11:\n          _context21.prev = 11;\n          _context21.t0 = _context21[\"catch\"](0);\n          console.error(_context21.t0);\n          _context21.next = 16;\n          return put({\n            type: LOAD_FOLLOWERS_FAILURE,\n            error: _context21.t0\n          });\n\n        case 16:\n        case \"end\":\n          return _context21.stop();\n      }\n    }\n  }, _marked21, null, [[0, 11]]);\n}\n\nfunction watchLoadFollowers() {\n  return _regeneratorRuntime.wrap(function watchLoadFollowers$(_context22) {\n    while (1) {\n      switch (_context22.prev = _context22.next) {\n        case 0:\n          _context22.next = 2;\n          return takeLatest(LOAD_FOLLOWERS_REQUEST, loadFollowers);\n\n        case 2:\n        case \"end\":\n          return _context22.stop();\n      }\n    }\n  }, _marked22);\n} //, offset = 0, limit =3 \n\n\nfunction loadFollowingsAPI(userId) {\n  return _regeneratorRuntime.wrap(function loadFollowingsAPI$(_context23) {\n    while (1) {\n      switch (_context23.prev = _context23.next) {\n        case 0:\n          return _context23.abrupt(\"return\", axios.get(\"/user/\".concat(0, \"/followings\"), {\n            withCredentials: true\n          }));\n\n        case 1:\n        case \"end\":\n          return _context23.stop();\n      }\n    }\n  }, _marked23);\n}\n\nfunction loadFollowings(action) {\n  var result, followingList;\n  return _regeneratorRuntime.wrap(function loadFollowings$(_context24) {\n    while (1) {\n      switch (_context24.prev = _context24.next) {\n        case 0:\n          _context24.prev = 0;\n          _context24.next = 3;\n          return call(loadFollowingsAPI, action.data);\n\n        case 3:\n          result = _context24.sent;\n          _context24.next = 6;\n          return result.then(function (resolve) {\n            return resolve.data;\n          });\n\n        case 6:\n          followingList = _context24.sent;\n          console.log('followingListfollowingList', followingList);\n          _context24.next = 10;\n          return put({\n            type: LOAD_FOLLOWINGS_SUCCESS,\n            data: followingList\n          });\n\n        case 10:\n          _context24.next = 17;\n          break;\n\n        case 12:\n          _context24.prev = 12;\n          _context24.t0 = _context24[\"catch\"](0);\n          console.error(_context24.t0);\n          _context24.next = 17;\n          return put({\n            type: LOAD_FOLLOWINGS_FAILURE,\n            error: _context24.t0\n          });\n\n        case 17:\n        case \"end\":\n          return _context24.stop();\n      }\n    }\n  }, _marked24, null, [[0, 12]]);\n}\n\nfunction watchLoadFollowings() {\n  return _regeneratorRuntime.wrap(function watchLoadFollowings$(_context25) {\n    while (1) {\n      switch (_context25.prev = _context25.next) {\n        case 0:\n          _context25.next = 2;\n          return takeLatest(LOAD_FOLLOWINGS_REQUEST, loadFollowings);\n\n        case 2:\n        case \"end\":\n          return _context25.stop();\n      }\n    }\n  }, _marked25);\n}\n\nfunction removeFollowerAPI(userId) {\n  return _regeneratorRuntime.wrap(function removeFollowerAPI$(_context26) {\n    while (1) {\n      switch (_context26.prev = _context26.next) {\n        case 0:\n          return _context26.abrupt(\"return\", axios[\"delete\"](\"/user/\".concat(userId, \"/follower\"), {\n            withCredentials: true\n          }));\n\n        case 1:\n        case \"end\":\n          return _context26.stop();\n      }\n    }\n  }, _marked26);\n}\n\nfunction removeFollower(action) {\n  var result, removeFollowerList;\n  return _regeneratorRuntime.wrap(function removeFollower$(_context27) {\n    while (1) {\n      switch (_context27.prev = _context27.next) {\n        case 0:\n          _context27.prev = 0;\n          _context27.next = 3;\n          return call(removeFollowerAPI, action.data);\n\n        case 3:\n          result = _context27.sent;\n          _context27.next = 6;\n          return result.then(function (resolve) {\n            return resolve.data;\n          });\n\n        case 6:\n          removeFollowerList = _context27.sent;\n          console.log('removeFollowerList==>', removeFollowerList);\n          _context27.next = 10;\n          return put({\n            type: REMOVE_FOLLOWER_SUCCESS,\n            data: removeFollowerList\n          });\n\n        case 10:\n          _context27.next = 17;\n          break;\n\n        case 12:\n          _context27.prev = 12;\n          _context27.t0 = _context27[\"catch\"](0);\n          console.error(_context27.t0);\n          _context27.next = 17;\n          return put({\n            type: REMOVE_FOLLOWER_FAILURE,\n            error: _context27.t0\n          });\n\n        case 17:\n        case \"end\":\n          return _context27.stop();\n      }\n    }\n  }, _marked27, null, [[0, 12]]);\n}\n\nfunction watchRemoveFollower() {\n  return _regeneratorRuntime.wrap(function watchRemoveFollower$(_context28) {\n    while (1) {\n      switch (_context28.prev = _context28.next) {\n        case 0:\n          _context28.next = 2;\n          return takeLatest(REMOVE_FOLLOWER_REQUEST, removeFollower);\n\n        case 2:\n        case \"end\":\n          return _context28.stop();\n      }\n    }\n  }, _marked28);\n}\n\nfunction editNicknameAPI(nickname) {\n  // 서버에 요청을 보내는 부분\n  return axios.patch('/user/nickname', {\n    nickname: nickname\n  }, {\n    withCredentials: true\n  });\n}\n\nfunction editNickname(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function editNickname$(_context29) {\n    while (1) {\n      switch (_context29.prev = _context29.next) {\n        case 0:\n          _context29.prev = 0;\n          _context29.next = 3;\n          return call(editNicknameAPI, action.data);\n\n        case 3:\n          result = _context29.sent;\n          console.log('editNickName', result);\n          _context29.next = 7;\n          return put({\n            // put은 dispatch 동일\n            type: EDIT_NICKNAME_SUCCESS,\n            data: result.data\n          });\n\n        case 7:\n          _context29.next = 14;\n          break;\n\n        case 9:\n          _context29.prev = 9;\n          _context29.t0 = _context29[\"catch\"](0);\n          // loginAPI 실패\n          console.error(_context29.t0);\n          _context29.next = 14;\n          return put({\n            type: EDIT_NICKNAME_FAILURE,\n            error: _context29.t0\n          });\n\n        case 14:\n        case \"end\":\n          return _context29.stop();\n      }\n    }\n  }, _marked29, null, [[0, 9]]);\n}\n\nfunction watchEditNickname() {\n  return _regeneratorRuntime.wrap(function watchEditNickname$(_context30) {\n    while (1) {\n      switch (_context30.prev = _context30.next) {\n        case 0:\n          _context30.next = 2;\n          return takeEvery(EDIT_NICKNAME_REQUEST, editNickname);\n\n        case 2:\n        case \"end\":\n          return _context30.stop();\n      }\n    }\n  }, _marked30);\n}\n\nexport default function userSaga() {\n  return _regeneratorRuntime.wrap(function userSaga$(_context31) {\n    while (1) {\n      switch (_context31.prev = _context31.next) {\n        case 0:\n          _context31.next = 2;\n          return all([fork(watchLogin), fork(watchLogout), fork(watchLoadUser), //fork(watchHello),\n          fork(watchSignUp), fork(watchFollowUser), fork(watchUnFollowUser), fork(watchLoadFollowers), fork(watchLoadFollowings), fork(watchRemoveFollower), fork(watchEditNickname)]);\n\n        case 2:\n        case \"end\":\n          return _context31.stop();\n      }\n    }\n  }, _marked31);\n}","map":{"version":3,"sources":["D:/git Repository/practice/front/sagas/user.js"],"names":["loginAPI","signUpAPI","logoutAPI","followAPI","unFollowAPI","watchLogin","watchSignUp","watchLogout","watchLoadUser","watchFollowUser","watchUnFollowUser","login","signUp","logout","loadUser","follow","unFollow","hello","watchHello","loadFollowersAPI","loadFollowers","watchLoadFollowers","loadFollowingsAPI","loadFollowings","watchLoadFollowings","removeFollowerAPI","removeFollower","watchRemoveFollower","editNickname","watchEditNickname","userSaga","all","fork","takeLatest","call","put","delay","takeEvery","take","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","SIGN_UP_REQUEST","SIGN_UP_FAILURE","SIGN_UP_SUCCESS","LOG_OUT_REQUEST","LOG_OUT_FAILURE","LOG_OUT_SUCCESS","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","LOAD_USER_REQUEST","FOLLOW_USER_REQUEST","UNFOLLOW_USER_REQUEST","FOLLOW_USER_SUCCESS","FOLLOW_USER_FAILURE","UNFOLLOW_USER_SUCCESS","UNFOLLOW_USER_FAILURE","LOAD_FOLLOWERS_REQUEST","LOAD_FOLLOWERS_SUCCESS","LOAD_FOLLOWERS_FAILURE","LOAD_FOLLOWINGS_REQUEST","LOAD_FOLLOWINGS_SUCCESS","LOAD_FOLLOWINGS_FAILURE","REMOVE_FOLLOWER_SUCCESS","REMOVE_FOLLOWER_FAILURE","REMOVE_FOLLOWER_REQUEST","EDIT_NICKNAME_REQUEST","EDIT_NICKNAME_FAILURE","EDIT_NICKNAME_SUCCESS","axios","HELLO_SAGA","loginData","post","withCredentials","signUpData","loadUserAPI","userId","get","action","data","result","then","resolve","loginInfo","type","console","error","me","log","followInfo","unFollowInfo","followerList","followingList","removeFollowerList","editNicknameAPI","nickname","patch"],"mappings":"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","sourcesContent":["import {all ,fork, takeLatest, call, put, delay,takeEvery,take }from 'redux-saga/effects'; \r\n//이 외에도\r\n// race, cancel, select, throttle, debounce 등 도 있다. \r\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, SIGN_UP_REQUEST, SIGN_UP_FAILURE, SIGN_UP_SUCCESS, LOG_OUT_REQUEST, LOG_OUT_FAILURE, LOG_OUT_SUCCESS, LOAD_USER_SUCCESS, LOAD_USER_FAILURE, LOAD_USER_REQUEST, FOLLOW_USER_REQUEST, UNFOLLOW_USER_REQUEST, FOLLOW_USER_SUCCESS, FOLLOW_USER_FAILURE, UNFOLLOW_USER_SUCCESS, UNFOLLOW_USER_FAILURE, LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWERS_SUCCESS, LOAD_FOLLOWERS_FAILURE, LOAD_FOLLOWINGS_REQUEST, LOAD_FOLLOWINGS_SUCCESS, LOAD_FOLLOWINGS_FAILURE, REMOVE_FOLLOWER_SUCCESS, REMOVE_FOLLOWER_FAILURE, REMOVE_FOLLOWER_REQUEST, EDIT_NICKNAME_REQUEST, EDIT_NICKNAME_FAILURE, EDIT_NICKNAME_SUCCESS } from '../reducers/user';\r\nimport axios from 'axios';\r\n\r\n//call : 함수 동기적 호출   (순서를 지켜서 실행해야 하는 경우)\r\n//fort : 함수 비동기적 호출  \r\n//---------------------------둘 다 함수를 실행시켜준다.\r\n\r\n//put  : 액션 , 사가의 dispatch\r\n//take : 해당 액션이 dispatch되면 제너레이터를 next하는 이펙트 \r\n//all  : 여러 이펙트를 동시에 실행 할 수 있게 합니다.\r\n\r\n\r\nexport const HELLO_SAGA = 'HELLO_SAGA'; \r\n\r\n\r\n//-----------------------------------API\r\nfunction* loginAPI(loginData){\r\n//서버에 요청하는 부분 \r\n    return axios.post('/user/login',loginData,{withCredentials:true}); \r\n}\r\n                                                                                          //▲백엔드와 프론트간에 쿠키를 주고 받을 수 있다.\r\n                                                                               \r\nfunction* signUpAPI(signUpData){\r\n    \r\n    return axios.post('/user/signUp',signUpData,{withCredentials:true}); \r\n}        \r\n\r\n\r\nfunction* logoutAPI(){\r\n\r\n    return axios.post('/user/logout',{},{withCredentials:true});\r\n                                    //▲POST로 보낼 때, 데이터 없더라도 빈 객체라도 보내야 한다.\r\n}\r\n\r\n// function* loadUserAPI(userId){\r\n    \r\n//     return axios.get(userId? `/user/${userId}`:'/user/',{withCredentials:true}); \r\n// }\r\n\r\nfunction loadUserAPI(userId) {\r\n  // 서버에 요청을 보내는 부분\r\n  return axios.get(userId ? `/user/${userId}` : '/user/', {\r\n    withCredentials: true,\r\n  });\r\n  }\r\n\r\nfunction* followAPI(userId){\r\n\r\n    return axios.post(`/user/${userId}/follow`,{},{withCredentials:true});\r\n                                             //▲post인 경우 데이터 없더라도 빈 객체라도 보내야 한다.\r\n}\r\n\r\nfunction* unFollowAPI(userId){\r\n\r\n    return axios.delete(`/user/${userId}/follow`, {\r\n        withCredentials: true,\r\n      });}\r\n//-----------------------------------END API\r\n\r\n\r\n//-----------------------------------WATCH\r\nfunction* watchLogin(){\r\n    yield takeEvery(LOG_IN_REQUEST,login); \r\n}\r\n\r\nfunction* watchSignUp(){\r\n    yield takeEvery(SIGN_UP_REQUEST,signUp)\r\n}\r\n\r\nfunction* watchLogout(){\r\n    yield takeEvery(LOG_OUT_REQUEST,logout); \r\n}\r\n\r\nfunction* watchLoadUser(){\r\n    yield takeEvery(LOAD_USER_REQUEST,loadUser); \r\n    \r\n}\r\n\r\n\r\nfunction* watchFollowUser(){\r\n\r\n    yield takeEvery(FOLLOW_USER_REQUEST,follow); \r\n}\r\n\r\nfunction* watchUnFollowUser(){\r\n    yield takeLatest(UNFOLLOW_USER_REQUEST,unFollow); \r\n}\r\n\r\n\r\n//-----------------------------------END WATCH \r\n\r\nfunction* login(action){\r\n   \r\n  \r\n    try{\r\n        \r\n         const result    = yield call(loginAPI,action.data);  \r\n         const loginInfo = yield result.then((resolve)=>{\r\n            \r\n            return resolve.data; \r\n            \r\n         }); \r\n\r\n       \r\n        yield  put({\r\n            type: LOG_IN_SUCCESS,\r\n            data: loginInfo,\r\n        });\r\n\r\n    }catch(e){\r\n        console.error(e); \r\n        yield put({\r\n            type:LOG_IN_FAILURE,\r\n        });\r\n    }\r\n\r\n}\r\n\r\nfunction* signUp(action){\r\n\r\n    try{\r\n    \r\n       const result =  yield call(signUpAPI,action.data); \r\n        yield put({\r\n                type: SIGN_UP_SUCCESS,\r\n            })\r\n\r\n    }catch(e){\r\n        console.error(e); \r\n        yield put({\r\n            type:SIGN_UP_FAILURE,\r\n        });\r\n    }\r\n\r\n}\r\n\r\nfunction* logout(){\r\n\r\n    try{\r\n\r\n        yield call(logoutAPI); \r\n        yield put({\r\n            type:LOG_OUT_SUCCESS, \r\n        })\r\n\r\n    }catch(e){\r\n        console.error(e); \r\n        yield put({\r\n            type:LOG_OUT_FAILURE, \r\n        });\r\n    }\r\n}\r\n\r\n\r\nfunction* loadUser(action){\r\n\r\n    try{\r\n   \r\n        const result   = yield call(loadUserAPI,action.data);  \r\n\r\n        yield put({\r\n                type: LOAD_USER_SUCCESS,\r\n                data: result.data,\r\n                me: !action.data,\r\n            })\r\n\r\n    }catch(e){\r\n        console.error(e); \r\n\r\n        yield put({\r\n            type:LOAD_USER_FAILURE,\r\n            error:e,\r\n        });\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction* follow(action){\r\n\r\n    try{\r\n\r\n      \r\n        const result   = yield call(followAPI,action.data);  \r\n\r\n        console.log('result==>',result); \r\n        const followInfo = yield result.then((resolve)=>{\r\n            \r\n            return resolve.data; \r\n         }); \r\n\r\n            console.log('followInfo==>',followInfo); \r\n        yield put({\r\n                type: FOLLOW_USER_SUCCESS,\r\n                data: followInfo, \r\n\r\n            })\r\n\r\n    }catch(e){\r\n        console.error(e); \r\n\r\n        yield put({\r\n            type:FOLLOW_USER_FAILURE,\r\n            error:e,\r\n        });\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nfunction* unFollow(action){\r\n\r\n    try{\r\n\r\n      \r\n        const result   = yield call(unFollowAPI,action.data);  \r\n        const unFollowInfo = yield result.then((resolve)=>{\r\n            \r\n            return resolve.data; \r\n         }); \r\n\r\n        yield put({\r\n                type: UNFOLLOW_USER_SUCCESS,\r\n                data: unFollowInfo, \r\n\r\n            })\r\n\r\n    }catch(e){\r\n        console.error(e); \r\n\r\n        yield put({\r\n            type:UNFOLLOW_USER_FAILURE,\r\n            error:e,\r\n        });\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction* hello(){\r\n\r\n    yield delay(1000); \r\n    yield put({\r\n        type:'Bye Saga'\r\n    })\r\n}\r\n\r\nfunction* watchHello(){\r\n     yield takeLatest(HELLO_SAGA, hello); \r\n}\r\n//이 기능을 takeLatest , takeEvery 로 대체할 수 있다. \r\n// function* watchHello(){\r\n//     console.log('before saga'); \r\n//     while(true){\r\n//         yield take(HELLO_SAGA); \r\n//         console.log('hello saga'); \r\n//     }\r\n// }\r\n\r\n//, offset = 0, limit = 3 \r\nfunction* loadFollowersAPI(userId){\r\n    //?offset=${offset}&limit=${limit}\r\n    return axios.get(`/user/${0}/followers`,{withCredentials:true});\r\n                                             //▲post인 경우 데이터 없더라도 빈 객체라도 보내야 한다.\r\n}\r\n\r\n\r\n\r\n\r\nfunction* loadFollowers(action){\r\n\r\n    try{\r\n\r\n      \r\n        const result   = yield call(loadFollowersAPI,action.data);  \r\n\r\n        const followerList = yield result.then((resolve)=>{\r\n            \r\n            return resolve.data; \r\n         }); \r\n\r\n        yield put({ \r\n                type: LOAD_FOLLOWERS_SUCCESS,\r\n                data: followerList, \r\n\r\n            })\r\n\r\n    }catch(e){\r\n        console.error(e); \r\n\r\n        yield put({\r\n            type:LOAD_FOLLOWERS_FAILURE,\r\n            error:e,\r\n        });\r\n    }\r\n\r\n}\r\n\r\n\r\nfunction* watchLoadFollowers(){\r\n\r\n    yield takeLatest(LOAD_FOLLOWERS_REQUEST,loadFollowers)\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n//, offset = 0, limit =3 \r\nfunction* loadFollowingsAPI(userId){\r\n//?offset=${offset}&limit=${limit}\r\n    return axios.get(`/user/${0}/followings`, {withCredentials: true,});\r\n\r\n}\r\n\r\n\r\n\r\nfunction* loadFollowings(action){\r\n\r\n    try{\r\n        const result   = yield call(loadFollowingsAPI,action.data);  \r\n\r\n        \r\n        const followingList = yield result.then((resolve)=>{\r\n            \r\n            return resolve.data; \r\n         }); \r\n\r\n         console.log('followingListfollowingList' , followingList); \r\n        yield put({\r\n                type: LOAD_FOLLOWINGS_SUCCESS,\r\n                data: followingList, \r\n            });\r\n\r\n    }catch(e){\r\n        console.error(e); \r\n        yield put({\r\n            type:LOAD_FOLLOWINGS_FAILURE,\r\n            error:e,\r\n        });\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\nfunction* watchLoadFollowings(){\r\n\r\n    yield takeLatest(LOAD_FOLLOWINGS_REQUEST,loadFollowings); \r\n    \r\n}\r\n\r\n\r\n\r\n\r\nfunction* removeFollowerAPI(userId){\r\n\r\n    return axios.delete(`/user/${userId}/follower`, {withCredentials: true,});\r\n\r\n}\r\n\r\n\r\n\r\nfunction* removeFollower(action){\r\n\r\n    try{\r\n        const result   = yield call(removeFollowerAPI,action.data);  \r\n        const removeFollowerList = yield result.then((resolve)=>{\r\n            return resolve.data; \r\n        }); \r\n        console.log('removeFollowerList==>' , removeFollowerList);\r\n        yield put({\r\n                type: REMOVE_FOLLOWER_SUCCESS,\r\n                data: removeFollowerList, \r\n            });\r\n\r\n    }catch(e){\r\n        console.error(e); \r\n        yield put({\r\n            type:REMOVE_FOLLOWER_FAILURE,\r\n            error:e,\r\n        });\r\n    }\r\n\r\n}\r\n\r\n\r\nfunction* watchRemoveFollower(){\r\n\r\n    yield takeLatest(REMOVE_FOLLOWER_REQUEST,removeFollower); \r\n}\r\n\r\n\r\nfunction editNicknameAPI(nickname) {\r\n    // 서버에 요청을 보내는 부분\r\n    return axios.patch('/user/nickname', { nickname }, {\r\n      withCredentials: true,\r\n    });\r\n  }\r\n  \r\n  function* editNickname(action) {\r\n    try {\r\n      // yield call(loadFollowersAPI);\r\n      const result = yield call(editNicknameAPI, action.data);\r\n      console.log('editNickName' , result); \r\n      yield put({ // put은 dispatch 동일\r\n        type: EDIT_NICKNAME_SUCCESS,\r\n        data: result.data,\r\n      });\r\n    } catch (e) { // loginAPI 실패\r\n      console.error(e);\r\n      yield put({\r\n        type: EDIT_NICKNAME_FAILURE,\r\n        error: e,\r\n      });\r\n    }\r\n  }\r\n  \r\n  function* watchEditNickname() {\r\n    yield takeEvery(EDIT_NICKNAME_REQUEST, editNickname);\r\n  }\r\n\r\n\r\nexport default function* userSaga() {\r\n\r\n    yield all([\r\n        fork(watchLogin), \r\n        fork(watchLogout),\r\n        fork(watchLoadUser), \r\n        //fork(watchHello),\r\n        fork(watchSignUp),\r\n        fork(watchFollowUser), \r\n        fork(watchUnFollowUser), \r\n        fork(watchLoadFollowers), \r\n        fork(watchLoadFollowings), \r\n        fork(watchRemoveFollower), \r\n        fork(watchEditNickname),\r\n        \r\n    ]);\r\n\r\n}"]},"metadata":{},"sourceType":"module"}