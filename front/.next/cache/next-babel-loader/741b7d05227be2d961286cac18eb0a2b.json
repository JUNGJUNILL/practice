{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, Avatar } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PostCard from '../components/PostCard';\nimport { LOAD_USER_POSTS_REQUEST } from '../reducers/post';\nimport userSaga from '../sagas/user';\nimport { LOAD_USER_REQUEST } from '../reducers/user';\n\nvar User = function User(_ref) {\n  var id = _ref.id;\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector.mainPosts;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.user;\n  }),\n      userInfo = _useSelector2.userInfo; //남의 정보 \n\n\n  return __jsx(\"div\", null, userInfo ? __jsx(Card, {\n    actions: [__jsx(\"div\", {\n      key: \"twit\"\n    }, \"\\uC9F9\\uC9F9\", __jsx(\"br\", null), userInfo.Posts), __jsx(\"div\", {\n      key: \"following\"\n    }, \"\\uD314\\uB85C\\uC789\", __jsx(\"br\", null), userInfo.Followings), __jsx(\"div\", {\n      key: \"follower\"\n    }, \"\\uD314\\uB85C\\uC6CC\", __jsx(\"br\", null), userInfo.Followers)]\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, null, userInfo.nickname[0]),\n    title: userInfo.nickname\n  })) : null, mainPosts.map(function (v, i) {\n    return __jsx(PostCard, {\n      key: i,\n      post: v\n    });\n  }));\n};\n\nUser.propTypes = {\n  id: PropTypes.number.isRequired\n};\n\nUser.getInitialProps = function _callee(context) {\n  var id;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          id = parseInt(context.query.id, 10);\n          console.log('user getInitialProps', id);\n          context.store.dispatch({\n            type: LOAD_USER_REQUEST,\n            data: id\n          });\n          context.store.dispatch({\n            type: LOAD_USER_POSTS_REQUEST,\n            data: id\n          });\n          return _context.abrupt(\"return\", {\n            id: id\n          });\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default User;","map":{"version":3,"sources":["D:/git Repository/practice/front/pages/user.js"],"names":["useEffect","PropTypes","Card","Avatar","useDispatch","useSelector","PostCard","LOAD_USER_POSTS_REQUEST","userSaga","LOAD_USER_REQUEST","User","id","dispatch","state","post","mainPosts","user","userInfo","Posts","Followings","Followers","nickname","map","v","i","propTypes","number","isRequired","getInitialProps","context","parseInt","query","console","log","store","type","data"],"mappings":";;;AAAA,SAAQA,SAAR,QAAwB,OAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAUC,IAAV,EAAeC,MAAf,QAA6B,MAA7B;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,uBAAT,QAAwC,kBAAxC;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,SAASC,iBAAT,QAAkC,kBAAlC;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAAQ;AAAA,MAANC,EAAM,QAANA,EAAM;AAEjB,MAAMC,QAAQ,GAAGR,WAAW,EAA5B;;AAFiB,qBAGGC,WAAW,CAAC,UAAAQ,KAAK;AAAA,WAAEA,KAAK,CAACC,IAAR;AAAA,GAAN,CAHd;AAAA,MAGVC,SAHU,gBAGVA,SAHU;;AAAA,sBAIGV,WAAW,CAAC,UAAAQ,KAAK;AAAA,WAAEA,KAAK,CAACG,IAAR;AAAA,GAAN,CAJd;AAAA,MAIVC,QAJU,iBAIVA,QAJU,EAImC;;;AAGpD,SACI,mBACCA,QAAQ,GACD,MAAC,IAAD;AACA,IAAA,OAAO,EAAE,CACP;AAAK,MAAA,GAAG,EAAC;AAAT,uBAEE,iBAFF,EAGGA,QAAQ,CAACC,KAHZ,CADO,EAMP;AAAK,MAAA,GAAG,EAAC;AAAT,6BAEE,iBAFF,EAGGD,QAAQ,CAACE,UAHZ,CANO,EAWP;AAAK,MAAA,GAAG,EAAC;AAAT,6BAEE,iBAFF,EAGGF,QAAQ,CAACG,SAHZ,CAXO;AADT,KAmBA,MAAC,IAAD,CAAM,IAAN;AACE,IAAA,MAAM,EAAE,MAAC,MAAD,QAASH,QAAQ,CAACI,QAAT,CAAkB,CAAlB,CAAT,CADV;AAEE,IAAA,KAAK,EAAEJ,QAAQ,CAACI;AAFlB,IAnBA,CADC,GAyBJ,IA1BL,EA4BCN,SAAS,CAACO,GAAV,CAAc,UAACC,CAAD,EAAGC,CAAH;AAAA,WACX,MAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,CAAf;AAAkB,MAAA,IAAI,EAAED;AAAxB,MADW;AAAA,GAAd,CA5BD,CADJ;AAkCH,CAzCD;;AA2CAb,IAAI,CAACe,SAAL,GAAiB;AACfd,EAAAA,EAAE,EAAEV,SAAS,CAACyB,MAAV,CAAiBC;AADN,CAAjB;;AAIAjB,IAAI,CAACkB,eAAL,GAAuB,iBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACflB,UAAAA,EADe,GACVmB,QAAQ,CAACD,OAAO,CAACE,KAAR,CAAcpB,EAAf,EAAkB,EAAlB,CADE;AAErBqB,UAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCtB,EAApC;AAEAkB,UAAAA,OAAO,CAACK,KAAR,CAActB,QAAd,CAAuB;AACnBuB,YAAAA,IAAI,EAAC1B,iBADc;AAEnB2B,YAAAA,IAAI,EAACzB;AAFc,WAAvB;AAKAkB,UAAAA,OAAO,CAACK,KAAR,CAActB,QAAd,CAAuB;AACrBuB,YAAAA,IAAI,EAAC5B,uBADgB;AAErB6B,YAAAA,IAAI,EAACzB;AAFgB,WAAvB;AATqB,2CAcd;AAAEA,YAAAA,EAAE,EAAFA;AAAF,WAdc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AAiBA,eAAeD,IAAf","sourcesContent":["import {useEffect} from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport  { Card,Avatar } from 'antd'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport PostCard from '../components/PostCard'\r\nimport { LOAD_USER_POSTS_REQUEST } from '../reducers/post';\r\nimport userSaga from '../sagas/user';\r\nimport { LOAD_USER_REQUEST } from '../reducers/user';\r\n\r\nconst User = ({id})=>{\r\n\r\n    const dispatch = useDispatch(); \r\n    const {mainPosts} = useSelector(state=>state.post); \r\n    const {userInfo}  = useSelector(state=>state.user); //남의 정보 \r\n\r\n\r\n    return (\r\n        <div>\r\n        {userInfo\r\n            ?(  <Card\r\n                actions={[\r\n                  <div key=\"twit\">\r\n                    짹짹\r\n                    <br />\r\n                    {userInfo.Posts}\r\n                  </div>,\r\n                  <div key=\"following\">\r\n                    팔로잉\r\n                    <br />\r\n                    {userInfo.Followings}\r\n                  </div>,\r\n                  <div key=\"follower\">\r\n                    팔로워\r\n                    <br />\r\n                    {userInfo.Followers}\r\n                  </div>,\r\n                ]}\r\n              >\r\n                <Card.Meta\r\n                  avatar={<Avatar>{userInfo.nickname[0]}</Avatar>}\r\n                  title={userInfo.nickname}\r\n                />\r\n              </Card>)  \r\n            :null\r\n        }\r\n        {mainPosts.map((v,i)=>(\r\n            <PostCard key={i} post={v} />\r\n        ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nUser.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n};\r\n\r\nUser.getInitialProps = async (context) => {\r\n  const id = parseInt(context.query.id,10); \r\n  console.log('user getInitialProps', id);\r\n\r\n  context.store.dispatch({\r\n      type:LOAD_USER_REQUEST,\r\n      data:id,\r\n  }); \r\n\r\n  context.store.dispatch({\r\n    type:LOAD_USER_POSTS_REQUEST,\r\n    data:id,\r\n\r\n  });\r\n  return { id };\r\n};\r\n\r\nexport default User; \r\n"]},"metadata":{},"sourceType":"module"}