{"ast":null,"code":"var _jsxFileName = \"D:\\\\git Repository\\\\practice\\\\front\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport PostForm from '../components/PostForm';\nimport PostCard from '../components/PostCard';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { LOG_IN, loginAction, LOG_IN_SUCCESS } from '../reducers/user';\n\nconst Home = () => {\n  const dispatch = useDispatch(); //dispatch() 는 useState 의 setState라고 생각하면 편하다.\n\n  const {\n    user,\n    isLoggedIn,\n    successMesage\n  } = useSelector(state => state.user); //리덕스 STATE를 가져오기 위해서는 userSelector \n\n  const {\n    mainPosts\n  } = useSelector(state => state.post);\n  useEffect(() => {\n    //   dispatch(loginAction);\n    dispatch({\n      type: 'HELLO_SAGA'\n    });\n    dispatch({\n      type: 'HELLO_SAGA'\n    });\n    dispatch({\n      type: 'HELLO_SAGA'\n    });\n    dispatch({\n      type: LOG_IN\n    });\n  }, []);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, successMesage, user ? __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }, \"\\uB85C\\uADF8\\uC778\\uB428\") : __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 39\n    }\n  }, \"\\uB85C\\uADF8\\uC778 \\uC548\\uB428\"), isLoggedIn && __jsx(PostForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 32\n    }\n  }), mainPosts.map((v, i) => {\n    return __jsx(PostCard, {\n      key: v.User.id,\n      post: v,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 29\n      }\n    });\n  }));\n};\n\nexport default Home;","map":{"version":3,"sources":["D:/git Repository/practice/front/pages/index.js"],"names":["React","useEffect","PostForm","PostCard","useDispatch","useSelector","LOG_IN","loginAction","LOG_IN_SUCCESS","Home","dispatch","user","isLoggedIn","successMesage","state","mainPosts","post","type","map","v","i","User","id"],"mappings":";;AACA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAASC,MAAT,EAAiBC,WAAjB,EAA8BC,cAA9B,QAAoD,kBAApD;;AAKA,MAAMC,IAAI,GAAG,MAAI;AAEb,QAAMC,QAAQ,GAAGN,WAAW,EAA5B,CAFa,CAGe;;AAE5B,QAAM;AAACO,IAAAA,IAAD;AAAMC,IAAAA,UAAN;AAAiBC,IAAAA;AAAjB,MAAkCR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACH,IAAhB,CAAnD,CALa,CAMe;;AAC5B,QAAM;AAACI,IAAAA;AAAD,MAAaV,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACE,IAAhB,CAA9B;AAEAf,EAAAA,SAAS,CAAC,MAAI;AACb;AACAS,IAAAA,QAAQ,CAAC;AACLO,MAAAA,IAAI,EAAC;AADA,KAAD,CAAR;AAGAP,IAAAA,QAAQ,CAAC;AACNO,MAAAA,IAAI,EAAC;AADC,KAAD,CAAR;AAGDP,IAAAA,QAAQ,CAAC;AACLO,MAAAA,IAAI,EAAC;AADA,KAAD,CAAR;AAIAP,IAAAA,QAAQ,CAAC;AACLO,MAAAA,IAAI,EAACX;AADA,KAAD,CAAR;AAIC,GAhBQ,EAgBP,EAhBO,CAAT;AAkBA,SAEQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCO,aADD,EAECF,IAAI,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAH,GAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAF1B,EAGKC,UAAU,IAAI,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHnB,EAIKG,SAAS,CAACG,GAAV,CAAc,CAACC,CAAD,EAAGC,CAAH,KAAO;AAClB,WACQ,MAAC,QAAD;AAAU,MAAA,GAAG,EAAED,CAAC,CAACE,IAAF,CAAOC,EAAtB;AAA0B,MAAA,IAAI,EAAEH,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADR;AAGH,GAJA,CAJL,CAFR;AAcH,CAzCD;;AA2CA,eAAeV,IAAf","sourcesContent":["\r\nimport React, {useEffect} from 'react'; \r\nimport PostForm from '../components/PostForm'\r\nimport PostCard from '../components/PostCard'\r\nimport {useDispatch ,useSelector} from 'react-redux'\r\nimport { LOG_IN, loginAction, LOG_IN_SUCCESS } from '../reducers/user';\r\n\r\n\r\n\r\n\r\nconst Home = ()=>{\r\n\r\n    const dispatch = useDispatch(); \r\n                                //dispatch() 는 useState 의 setState라고 생각하면 편하다.\r\n\r\n    const {user,isLoggedIn,successMesage} = useSelector(state => state.user);\r\n                                //리덕스 STATE를 가져오기 위해서는 userSelector \r\n    const {mainPosts} =useSelector(state => state.post); \r\n  \r\n    useEffect(()=>{\r\n     //   dispatch(loginAction);\r\n     dispatch({\r\n         type:'HELLO_SAGA', \r\n     })\r\n     dispatch({\r\n        type:'HELLO_SAGA', \r\n    })\r\n    dispatch({\r\n        type:'HELLO_SAGA', \r\n    })\r\n\r\n    dispatch({\r\n        type:LOG_IN,\r\n    })\r\n\r\n    },[])\r\n\r\n    return (\r\n      \r\n            <div>\r\n            {successMesage}\r\n            {user ? <div>로그인됨</div> : <div>로그인 안됨</div>}\r\n                {isLoggedIn && <PostForm />}\r\n                {mainPosts.map((v,i)=>{\r\n                    return (\r\n                            <PostCard key={v.User.id} post={v} />\r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n\r\n}\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}