{"ast":null,"code":"var _jsxFileName = \"D:\\\\git Repository\\\\practice\\\\front\\\\components\\\\PostCard.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useCallback } from 'react';\nimport { Card, Button, Avatar, Form, Input, List, Comment } from 'antd';\nimport { RetweetOutlined, HeartOutlined, MessageOutlined, EllipsisOutlined } from '@ant-design/icons';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst PostCard = ({\n  post\n}) => {\n  const {\n    0: commentFormOpend,\n    1: setCommentFormOpend\n  } = useState(false);\n  const {\n    0: commentText,\n    1: setCommentText\n  } = useState('');\n  const {\n    me\n  } = useSelector(state => state.user);\n  const dispatch = useDispatch();\n  const onToggleComment = useCallback(() => {\n    setCommentFormOpend(preve => !preve);\n\n    if (!commentFormOpend) {}\n  }, [commentFormOpend]);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, __jsx(Card, {\n    key: +post.createdAt,\n    cover: post.img && __jsx(\"img\", {\n      alt: \"example\",\n      src: post.img,\n      style: {\n        width: '100px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 32\n      }\n    }),\n    actions: [__jsx(RetweetOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }), __jsx(HeartOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }), __jsx(MessageOutlined, {\n      onClick: onToggleComment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }), __jsx(EllipsisOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    })],\n    extra: __jsx(Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 20\n      }\n    }, \"\\uD314\\uB85C\\uC6B0\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }\n    }, post.User.nickname[0]),\n    title: post.User.nickname,\n    description: post.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  })), commentFormOpend && __jsx(React.Fragment, null, __jsx(Form, {\n    onFinish: onSubmitComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, __jsx(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, __jsx(Input.TextArea, {\n    rows: 4,\n    value: commentText,\n    onChange: onChangeCommentText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  })), __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, \"\\uC090\\uC57D\")), __jsx(List, {\n    header: `${post.Comments ? post.Comments.length : 0} 댓글`,\n    itemLayout: \"horizontal\",\n    dataSource: post.Comment || [],\n    renderItem: item => __jsx(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 22\n      }\n    }, __jsx(Comment, {\n      author: item.User.nickname,\n      avatar: __jsx(Avatar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 33\n        }\n      }, item.User.nickname[0]),\n      content: item.content,\n      datetime: item.createdAt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 23\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  })));\n};\n\nPostCard.propTypes = {\n  //shape을 써서 객체의 각 props의 상세 타입을 지정할 수 있다.\n  post: PropTypes.shape({\n    User: PropTypes.object,\n    content: PropTypes.string,\n    img: PropTypes.string,\n    createdAt: PropTypes.object\n  })\n};\nexport default PostCard;","map":{"version":3,"sources":["D:/git Repository/practice/front/components/PostCard.js"],"names":["React","useState","useCallback","Card","Button","Avatar","Form","Input","List","Comment","RetweetOutlined","HeartOutlined","MessageOutlined","EllipsisOutlined","PropTypes","useDispatch","useSelector","PostCard","post","commentFormOpend","setCommentFormOpend","commentText","setCommentText","me","state","user","dispatch","onToggleComment","preve","createdAt","img","width","User","nickname","content","onSubmitComment","onChangeCommentText","Comments","length","item","propTypes","shape","object","string"],"mappings":"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","sourcesContent":["\r\nimport React,{useState,useCallback}  from 'react'\r\nimport {Card , Button, Avatar,Form, Input, List, Comment}from 'antd'\r\nimport {RetweetOutlined ,\r\n        HeartOutlined ,\r\n        MessageOutlined,\r\n        EllipsisOutlined \r\n} from '@ant-design/icons';\r\nimport PropTypes from 'prop-types'\r\n\r\nimport {useDispatch ,useSelector} from 'react-redux'\r\n\r\nconst PostCard = ({post}) =>{\r\n    \r\n    const [commentFormOpend,setCommentFormOpend] = useState(false); \r\n    const [commentText, setCommentText] = useState(''); \r\n    const { me } = useSelector(state=> state.user); \r\n    const dispatch = useDispatch(); \r\n\r\n    const onToggleComment = useCallback(() =>{\r\n        setCommentFormOpend(preve => !preve); \r\n        if(!commentFormOpend){\r\n\r\n        }\r\n\r\n    },[commentFormOpend]);\r\n\r\n    return (\r\n        <div>\r\n        <Card\r\n            key={+post.createdAt}\r\n            cover={post.img && <img alt=\"example\" src={post.img} style={{width:'100px'}}/>}\r\n            actions={[\r\n                <RetweetOutlined />,\r\n                <HeartOutlined />,\r\n                <MessageOutlined  onClick={onToggleComment} />,\r\n                <EllipsisOutlined />,\r\n            ]}\r\n            extra={<Button>팔로우</Button>}\r\n             >\r\n            <Card.Meta \r\n                avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\r\n                title={post.User.nickname}\r\n                description={post.content}\r\n            />\r\n        </Card>\r\n        {commentFormOpend && (\r\n            <>\r\n            <Form onFinish={onSubmitComment}>\r\n                <Form.Item>\r\n                    <Input.TextArea rows={4} value={commentText} onChange={onChangeCommentText}/>\r\n                </Form.Item>\r\n                <Button type=\"primary\" htmlType=\"submit\">삐약</Button>\r\n            </Form>\r\n            <List \r\n                 header={`${post.Comments? post.Comments.length : 0 } 댓글`}\r\n                 itemLayout=\"horizontal\"\r\n                 dataSource={post.Comment || []}\r\n                 renderItem={item=>(\r\n                     <li>\r\n                      <Comment \r\n                        author={item.User.nickname}\r\n                        avatar={<Avatar>{item.User.nickname[0]}</Avatar>}\r\n                        content={item.content}\r\n                        datetime={item.createdAt}\r\n                      />\r\n                      </li>\r\n                 )}\r\n            />\r\n            </>\r\n\r\n        )}\r\n        </div>\r\n    )\r\n     \r\n}\r\n\r\nPostCard.propTypes = {\r\n                    //shape을 써서 객체의 각 props의 상세 타입을 지정할 수 있다.\r\n    post : PropTypes.shape({\r\n            User: PropTypes.object,\r\n            content : PropTypes.string,\r\n            img:PropTypes.string,\r\n            createdAt:PropTypes.object\r\n    })\r\n}\r\n\r\nexport default PostCard; "]},"metadata":{},"sourceType":"module"}