{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useCallback, useState } from 'react';\nimport { EDIT_NICKNAME_REQUEST } from '../reducers/user';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Form, Button, Input } from 'antd';\nimport { StopOutlined } from '@ant-design/icons';\n\nvar NicknameEditForm = function NicknameEditForm() {\n  var dispatch = useDispatch();\n\n  var _useState = useState(''),\n      editedName = _useState[0],\n      setEditedName = _useState[1]; //const { isEditingNickname } = useSelector(state => state.post);\n\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me,\n      isEditingNickName = _useSelector.isEditingNickName;\n\n  var onChangeNickName = useCallback(function (e) {\n    setEditedName(e.target.value);\n  }, []);\n  var onEditNickName = useCallback(function () {\n    dispatch({\n      type: EDIT_NICKNAME_REQUEST,\n      data: editedName\n    });\n  }, [editedName]);\n  return __jsx(Form, {\n    onFinish: onEditNickName,\n    style: {\n      marginBottom: '20px',\n      border: '1px solid #d9d9d9',\n      padding: '20px'\n    }\n  }, __jsx(Input, {\n    addonBefore: \"\\uB2C9\\uB124\\uC784\",\n    value: editedName || me && me.nickname,\n    onChange: onChangeNickName\n  }), __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: isEditingNickName\n  }, \"\\uC218\\uC815\"));\n};\n\nexport default NicknameEditForm;","map":{"version":3,"sources":["D:/git Repository/practice/front/components/NicknameEditForm.js"],"names":["React","useEffect","useCallback","useState","EDIT_NICKNAME_REQUEST","useDispatch","useSelector","Form","Button","Input","StopOutlined","NicknameEditForm","dispatch","editedName","setEditedName","state","user","me","isEditingNickName","onChangeNickName","e","target","value","onEditNickName","type","data","marginBottom","border","padding","nickname"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,WAA3B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAAQC,qBAAR,QAAmC,kBAAnC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAAQC,IAAR,EAAcC,MAAd,EAAuBC,KAAvB,QAAmC,MAAnC;AACA,SAAQC,YAAR,QACO,mBADP;;AAQA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAI;AAEzB,MAAMC,QAAQ,GAAGP,WAAW,EAA5B;;AAFyB,kBAGaF,QAAQ,CAAC,EAAD,CAHrB;AAAA,MAGlBU,UAHkB;AAAA,MAGLC,aAHK,iBAIzB;;;AAJyB,qBAKOR,WAAW,CAAC,UAAAS,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAV;AAAA,GAAN,CALlB;AAAA,MAKlBC,EALkB,gBAKlBA,EALkB;AAAA,MAKdC,iBALc,gBAKdA,iBALc;;AAOzB,MAAMC,gBAAgB,GAAGjB,WAAW,CAAC,UAACkB,CAAD,EAAK;AAElCN,IAAAA,aAAa,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb;AACP,GAHmC,EAGlC,EAHkC,CAApC;AAKA,MAAMC,cAAc,GAAGrB,WAAW,CAAC,YAAK;AACpCU,IAAAA,QAAQ,CAAC;AACDY,MAAAA,IAAI,EAACpB,qBADJ;AAEDqB,MAAAA,IAAI,EAACZ;AAFJ,KAAD,CAAR;AAMH,GAPiC,EAOhC,CAACA,UAAD,CAPgC,CAAlC;AASA,SAEI,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAEU,cAAhB;AAAgC,IAAA,KAAK,EAAE;AAACG,MAAAA,YAAY,EAAC,MAAd;AAAuBC,MAAAA,MAAM,EAAC,mBAA9B;AAAmDC,MAAAA,OAAO,EAAE;AAA5D;AAAvC,KACA,MAAC,KAAD;AAAO,IAAA,WAAW,EAAC,oBAAnB;AAAyB,IAAA,KAAK,EAAEf,UAAU,IAAKI,EAAE,IAAIA,EAAE,CAACY,QAAxD;AAAmE,IAAA,QAAQ,EAAEV;AAA7E,IADA,EAEA,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,QAAQ,EAAC,QAAhC;AAAyC,IAAA,OAAO,EAAED;AAAlD,oBAFA,CAFJ;AAQH,CA7BD;;AA+BA,eAAgBP,gBAAhB","sourcesContent":["import React, { useEffect, useCallback,useState } from 'react';\r\nimport {EDIT_NICKNAME_REQUEST}from '../reducers/user'; \r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {Form, Button , Input} from 'antd'\r\nimport {StopOutlined \r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst NicknameEditForm = ()=>{\r\n\r\n    const dispatch = useDispatch();\r\n    const [editedName , setEditedName] =  useState(''); \r\n    //const { isEditingNickname } = useSelector(state => state.post);\r\n    const {me ,isEditingNickName} = useSelector(state => state.user); \r\n\r\n    const onChangeNickName = useCallback((e)=>{\r\n\r\n            setEditedName(e.target.value);\r\n    },[])\r\n\r\n    const onEditNickName = useCallback(() =>{\r\n        dispatch({\r\n                type:EDIT_NICKNAME_REQUEST, \r\n                data:editedName, \r\n            \r\n            }); \r\n\r\n    },[editedName]); \r\n  \r\n    return (\r\n\r\n        <Form onFinish={onEditNickName} style={{marginBottom:'20px' , border:'1px solid #d9d9d9', padding: '20px'}}>\r\n        <Input addonBefore='닉네임' value={editedName || (me && me.nickname)} onChange={onChangeNickName} />\r\n        <Button type=\"primary\" htmlType='submit' loading={isEditingNickName}>수정</Button>\r\n        </Form>\r\n    )\r\n\r\n}\r\n\r\nexport default  NicknameEditForm; "]},"metadata":{},"sourceType":"module"}