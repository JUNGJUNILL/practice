{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PostCard from '../components/PostCard';\nimport { LOAD_HASHTAG_POSTS_REQUEST } from '../reducers/post';\n\nconst Hashtag = ({\n  tag\n}) => {\n  const dispatch = useDispatch();\n  const {\n    mainPosts\n  } = useSelector(state => state.post);\n  return __jsx(\"div\", null, mainPosts.map((v, i) => __jsx(PostCard, {\n    key: i,\n    post: v\n  })));\n};\n\nHashtag.propTypes = {\n  tag: PropTypes.string.isRequired\n}; //next에서 제공하는 기능\n//_app.js에서 NodeBird.getInitialProps 추가 되어야 가능(_app.js에서 가장 먼저 선행 되어야 한다.)\n//_app.js에서 context가 이 Hashtag의 실행 문맥이 된다.\n\nHashtag.getInitialProps = async context => {\n  const tag = context.query.tag;\n  console.log(context.query.tag);\n  context.store.dispatch({\n    type: LOAD_HASHTAG_POSTS_REQUEST,\n    data: tag\n  });\n  return {\n    tag\n  };\n};\n\nexport default Hashtag;","map":{"version":3,"sources":["D:/git Repository/practice/front/pages/hashtag.js"],"names":["PropTypes","useEffect","useDispatch","useSelector","PostCard","LOAD_HASHTAG_POSTS_REQUEST","Hashtag","tag","dispatch","mainPosts","state","post","map","v","i","propTypes","string","isRequired","getInitialProps","context","query","console","log","store","type","data"],"mappings":";;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAAQC,SAAR,QAAwB,OAAxB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,0BAAT,QAA2C,kBAA3C;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAS;AAErB,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAM;AAACO,IAAAA;AAAD,MAAcN,WAAW,CAACO,KAAK,IAAEA,KAAK,CAACC,IAAd,CAA/B;AAGA,SACI,mBACKF,SAAS,CAACG,GAAV,CAAc,CAACC,CAAD,EAAGC,CAAH,KACX,MAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,CAAf;AAAkB,IAAA,IAAI,EAAED;AAAxB,IADH,CADL,CADJ;AAOH,CAbD;;AAeAP,OAAO,CAACS,SAAR,GAAoB;AAChBR,EAAAA,GAAG,EAAGP,SAAS,CAACgB,MAAV,CAAiBC;AADP,CAApB,C,CAIQ;AACA;AACA;;AACRX,OAAO,CAACY,eAAR,GAA0B,MAAOC,OAAP,IAAkB;AAExC,QAAMZ,GAAG,GAAGY,OAAO,CAACC,KAAR,CAAcb,GAA1B;AACAc,EAAAA,OAAO,CAACC,GAAR,CAAYH,OAAO,CAACC,KAAR,CAAcb,GAA1B;AAEAY,EAAAA,OAAO,CAACI,KAAR,CAAcf,QAAd,CAAuB;AACnBgB,IAAAA,IAAI,EAACnB,0BADc;AAEnBoB,IAAAA,IAAI,EAAClB;AAFc,GAAvB;AAKA,SAAO;AAAEA,IAAAA;AAAF,GAAP;AACH,CAXD;;AAaA,eAAeD,OAAf","sourcesContent":["import PropTypes from 'prop-types'\r\nimport {useEffect} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport PostCard from '../components/PostCard'\r\nimport { LOAD_HASHTAG_POSTS_REQUEST } from '../reducers/post';\r\n\r\nconst Hashtag = ({tag})=>{\r\n\r\n    const dispatch = useDispatch(); \r\n    const {mainPosts} = useSelector(state=>state.post); \r\n\r\n\r\n    return(\r\n        <div>\r\n            {mainPosts.map((v,i)=>(\r\n                <PostCard key={i} post={v} />\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nHashtag.propTypes = {\r\n    tag : PropTypes.string.isRequired, \r\n}\r\n\r\n        //next에서 제공하는 기능\r\n        //_app.js에서 NodeBird.getInitialProps 추가 되어야 가능(_app.js에서 가장 먼저 선행 되어야 한다.)\r\n        //_app.js에서 context가 이 Hashtag의 실행 문맥이 된다.\r\nHashtag.getInitialProps = async (context) =>{\r\n    \r\n    const tag = context.query.tag; \r\n    console.log(context.query.tag);\r\n\r\n    context.store.dispatch({\r\n        type:LOAD_HASHTAG_POSTS_REQUEST,\r\n        data:tag,\r\n    }); \r\n\r\n    return { tag }; \r\n}\r\n\r\nexport default Hashtag; "]},"metadata":{},"sourceType":"module"}