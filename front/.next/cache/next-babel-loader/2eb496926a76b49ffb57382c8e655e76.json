{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport PostForm from '../components/PostForm';\nimport PostCard from '../components/PostCard';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { LOG_IN_REQUEST, loginAction, LOG_IN_SUCCESS } from '../reducers/user';\nimport { LOAD_MAIN_POSTS_REQUEST } from '../reducers/post';\n\nvar Home = function Home() {\n  var dispatch = useDispatch(); //dispatch() 는 useState 의 setState라고 생각하면 편하다.\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me; //리덕스 STATE를 가져오기 위해서는 userSelector \n\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector2.mainPosts;\n\n  useEffect(function () {\n    dispatch({\n      type: LOAD_MAIN_POSTS_REQUEST\n    });\n  }, []);\n  return __jsx(\"div\", null, me ? __jsx(\"div\", null, \"\\uB85C\\uADF8\\uC778\\uB428\") : __jsx(\"div\", null, \"\\uB85C\\uADF8\\uC778 \\uC548\\uB428\"), me && __jsx(PostForm, {\n    userInfo: me\n  }), mainPosts.map(function (v, i) {\n    return __jsx(PostCard, {\n      key: v.id,\n      post: v\n    });\n  }));\n};\n\nHome.getInitialProps = function _callee(context) {\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          console.log(Object.keys(context));\n\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Home;","map":{"version":3,"sources":["D:/git Repository/practice/front/pages/index.js"],"names":["React","useEffect","PostForm","PostCard","useDispatch","useSelector","LOG_IN_REQUEST","loginAction","LOG_IN_SUCCESS","LOAD_MAIN_POSTS_REQUEST","Home","dispatch","state","user","me","post","mainPosts","type","map","v","i","id","getInitialProps","context","console","log","Object","keys"],"mappings":";;AACA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAASC,cAAT,EAAyBC,WAAzB,EAAsCC,cAAtC,QAA4D,kBAA5D;AACA,SAASC,uBAAT,QAAwC,kBAAxC;;AAKA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAI;AAEb,MAAMC,QAAQ,GAAGP,WAAW,EAA5B,CAFa,CAGe;;AAHf,qBAKAC,WAAW,CAAC,UAAAO,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAV;AAAA,GAAN,CALX;AAAA,MAKNC,EALM,gBAKNA,EALM,EAMe;;;AANf,sBAOMT,WAAW,CAAC,UAAAO,KAAK;AAAA,WAAIA,KAAK,CAACG,IAAV;AAAA,GAAN,CAPjB;AAAA,MAONC,SAPM,iBAONA,SAPM;;AASbf,EAAAA,SAAS,CAAC,YAAI;AACbU,IAAAA,QAAQ,CAAC;AACLM,MAAAA,IAAI,EAACR;AADA,KAAD,CAAR;AAGA,GAJQ,EAIP,EAJO,CAAT;AAMA,SAEQ,mBAECK,EAAE,GAAG,8CAAH,GAAqB,qDAFxB,EAGKA,EAAE,IAAI,MAAC,QAAD;AAAU,IAAA,QAAQ,EAAEA;AAApB,IAHX,EAKKE,SAAS,CAACE,GAAV,CAAc,UAACC,CAAD,EAAGC,CAAH,EAAO;AAClB,WACQ,MAAC,QAAD;AAAU,MAAA,GAAG,EAAED,CAAC,CAACE,EAAjB;AAAqB,MAAA,IAAI,EAAEF;AAA3B,MADR;AAGH,GAJA,CALL,CAFR;AAeH,CA9BD;;AAgCAT,IAAI,CAACY,eAAL,GAAuB,iBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AACnBC,UAAAA,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACC,IAAP,CAAYJ,OAAZ,CAAZ;;AADmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AAKA,eAAeb,IAAf","sourcesContent":["\r\nimport React, {useEffect} from 'react'; \r\nimport PostForm from '../components/PostForm'\r\nimport PostCard from '../components/PostCard'\r\nimport {useDispatch ,useSelector} from 'react-redux'\r\nimport { LOG_IN_REQUEST, loginAction, LOG_IN_SUCCESS } from '../reducers/user';\r\nimport { LOAD_MAIN_POSTS_REQUEST } from '../reducers/post';\r\n\r\n\r\n\r\n\r\nconst Home = ()=>{\r\n\r\n    const dispatch = useDispatch(); \r\n                                //dispatch() 는 useState 의 setState라고 생각하면 편하다.\r\n\r\n    const {me} = useSelector(state => state.user);\r\n                                //리덕스 STATE를 가져오기 위해서는 userSelector \r\n    const {mainPosts} =useSelector(state => state.post); \r\n  \r\n    useEffect(()=>{\r\n     dispatch({\r\n         type:LOAD_MAIN_POSTS_REQUEST, \r\n     });\r\n    },[])\r\n\r\n    return (\r\n      \r\n            <div>\r\n            \r\n            {me ? <div>로그인됨</div> : <div>로그인 안됨</div>}\r\n                {me && <PostForm userInfo={me} />}\r\n                \r\n                {mainPosts.map((v,i)=>{\r\n                    return (\r\n                            <PostCard key={v.id} post={v} />\r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n\r\n}\r\n\r\nHome.getInitialProps = async (context) =>{\r\n    console.log(Object.keys(context)); \r\n\r\n};\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}