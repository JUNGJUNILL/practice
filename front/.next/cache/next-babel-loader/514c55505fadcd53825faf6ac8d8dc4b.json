{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useCallback, useState, useRef } from 'react';\nimport { Form, Button, Input } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ADD_POST_REQUEST, UPLOAD_IMAGES_REQUEST, REMOVE_IMAGE } from '../reducers/post';\n\nconst PostForm = ({\n  userInfo\n}) => {\n  const dispatch = useDispatch();\n  const {\n    0: text,\n    1: setText\n  } = useState('');\n  const {\n    imagePaths,\n    isAddingPost,\n    postAdded\n  } = useSelector(state => state.post);\n  const imageInput = useRef();\n  useEffect(() => {\n    setText('');\n  }, [postAdded === true]);\n  const onSubmitForm = useCallback(e => {\n    //e.preventDefault();\n    if (!text || !text.trim()) {\n      alert('게시글을 입력해 주세요');\n      return;\n    }\n\n    const formData = new FormData();\n    imagePaths.forEach(i => {\n      formData.append('image', i);\n    });\n    formData.append('content', text);\n    dispatch({\n      type: ADD_POST_REQUEST,\n      data: formData\n    });\n  }, [text, imagePaths]);\n  const onChangeText = useCallback(e => {\n    setText(e.target.value);\n  }, []);\n  const onChangeImages = useCallback(e => {\n    console.log('읭??', e.target.files);\n    const imageFormData = new FormData(); //브라우저에서 제공 \n    //express bodyParser로 전송 불가능\n    //muter 미들웨어로 처리해야 한다.\n    //와... 무슨 문법이냐??? \n\n    [].forEach.call(e.target.files, f => {\n      imageFormData.append('image', f);\n    });\n    dispatch({\n      type: UPLOAD_IMAGES_REQUEST,\n      data: imageFormData\n    });\n  }, []);\n  const onClickImageUpload = useCallback(() => {\n    imageInput.current.click();\n  }, [imageInput.current]); //고차함수 패턴임.. 정확히는 잘 모르겠음 \n\n  const onRemoveImage = useCallback(index => () => {\n    dispatch({\n      type: REMOVE_IMAGE,\n      index\n    });\n  }, []);\n  return __jsx(Form, {\n    style: {\n      margin: '10px 0 20px'\n    },\n    encType: \"multipart/form-data\",\n    onFinish: onSubmitForm\n  }, __jsx(Input.TextArea, {\n    maxLength: 140,\n    placeholder: \"\\uC5B4\\uB5A4\\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\",\n    value: text,\n    onChange: onChangeText\n  }), __jsx(\"div\", null, __jsx(\"input\", {\n    type: \"file\",\n    multiple: true,\n    ref: imageInput,\n    onChange: onChangeImages,\n    hidden: true\n  }), __jsx(Button, {\n    onClick: onClickImageUpload\n  }, \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"), __jsx(Button, {\n    type: \"primary\",\n    style: {\n      float: 'right'\n    },\n    htmlType: \"submit\",\n    loading: isAddingPost\n  }, \"\\uC9F9\\uC9F9\")), __jsx(\"div\", null, imagePaths.map((v, i) => {\n    return __jsx(\"div\", {\n      key: v,\n      style: {\n        display: 'inline-block'\n      }\n    }, __jsx(\"img\", {\n      src: `http://captainryan.gonetis.com:3065/${v}`,\n      style: {\n        width: '200px'\n      },\n      alt: v\n    }), __jsx(\"div\", null, __jsx(Button, {\n      onClick: onRemoveImage(i)\n    }, \"\\uC81C\\uAC70\")));\n  })));\n};\n\nexport default PostForm;","map":{"version":3,"sources":["D:/git Repository/practice/front/components/PostForm.js"],"names":["React","useEffect","useCallback","useState","useRef","Form","Button","Input","useDispatch","useSelector","ADD_POST_REQUEST","UPLOAD_IMAGES_REQUEST","REMOVE_IMAGE","PostForm","userInfo","dispatch","text","setText","imagePaths","isAddingPost","postAdded","state","post","imageInput","onSubmitForm","e","trim","alert","formData","FormData","forEach","i","append","type","data","onChangeText","target","value","onChangeImages","console","log","files","imageFormData","call","f","onClickImageUpload","current","click","onRemoveImage","index","margin","float","map","v","display","width"],"mappings":"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","sourcesContent":["import React,{useEffect, useCallback, useState, useRef} from 'react'\r\nimport {Form, Button,Input}from 'antd'\r\n\r\nimport {useDispatch ,useSelector} from 'react-redux'\r\nimport { ADD_POST_REQUEST, UPLOAD_IMAGES_REQUEST, REMOVE_IMAGE } from '../reducers/post';\r\n\r\n\r\n\r\nconst PostForm = ({userInfo}) =>{\r\n\r\n    const dispatch=useDispatch();\r\n    const [text,setText] = useState(''); \r\n    const {imagePaths, isAddingPost, postAdded} = useSelector(state=>state.post);\r\n    const imageInput = useRef();\r\n\r\n    useEffect(()=>{\r\n        setText(''); \r\n    },[postAdded === true])\r\n\r\n    const onSubmitForm = useCallback((e)=>{\r\n        //e.preventDefault();\r\n        if(!text || !text.trim()){\r\n            alert('게시글을 입력해 주세요'); \r\n            return; \r\n        }\r\n        const formData = new FormData(); \r\n        imagePaths.forEach((i)=>{\r\n            formData.append('image',i);\r\n        })\r\n        formData.append('content',text); \r\n\r\n\r\n        dispatch({\r\n                type:ADD_POST_REQUEST,\r\n                data: formData,\r\n            });\r\n\r\n    },[text,imagePaths]); \r\n    \r\n\r\n\r\n    const onChangeText =useCallback( (e)=>{\r\n        setText(e.target.value); \r\n    },[]); \r\n\r\n    const onChangeImages =useCallback((e)=>{\r\n\r\n        console.log('읭??',e.target.files); \r\n        const imageFormData = new FormData(); //브라우저에서 제공 \r\n                                              //express bodyParser로 전송 불가능\r\n                                              //muter 미들웨어로 처리해야 한다.\r\n        //와... 무슨 문법이냐??? \r\n        [].forEach.call(e.target.files,(f)=>{\r\n            imageFormData.append('image',f); \r\n        });\r\n\r\n        dispatch({\r\n            type : UPLOAD_IMAGES_REQUEST,\r\n            data : imageFormData,\r\n        });\r\n    \r\n      \r\n    },[]); \r\n\r\n    const onClickImageUpload = useCallback(() =>{\r\n\r\n        imageInput.current.click(); \r\n    },[imageInput.current])\r\n\r\n\r\n    //고차함수 패턴임.. 정확히는 잘 모르겠음 \r\n    const onRemoveImage = useCallback((index)=>()=>{\r\n            dispatch({\r\n                type:REMOVE_IMAGE,\r\n                index,\r\n            }); \r\n    },[])\r\n\r\n    return(\r\n            \r\n                <Form style={{margin:'10px 0 20px'}} encType=\"multipart/form-data\" onFinish={onSubmitForm}>               \r\n                        \r\n                        <Input.TextArea maxLength={140} placeholder=\"어떤일이 있었나요?\" value={text} onChange={onChangeText} />\r\n                        <div>\r\n                            <input type=\"file\" multiple ref={imageInput} onChange={onChangeImages} hidden />\r\n                            <Button onClick={onClickImageUpload}>이미지 업로드</Button>\r\n                            <Button type=\"primary\" style={{float:'right'}} htmlType=\"submit\" loading={isAddingPost}>짹짹</Button>\r\n                        </div>\r\n                        <div>\r\n                        {imagePaths.map((v,i)=>{\r\n                            return (\r\n\r\n                                <div key={v} style={{display:'inline-block'}}>\r\n                                 <img src={`http://captainryan.gonetis.com:3065/${v}`} style={{width:'200px' }} alt={v} />\r\n                                <div>\r\n                                    <Button onClick={onRemoveImage(i)}>제거</Button>\r\n                                </div>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                        </div>\r\n                </Form>\r\n            )\r\n}\r\nexport default PostForm; "]},"metadata":{},"sourceType":"module"}