{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\git Repository\\\\practice\\\\front\\\\pages\\\\index.js\";\n\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport PostForm from '../components/PostForm';\nimport PostCard from '../components/PostCard';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { LOG_IN, loginAction } from '../reducers/user';\nvar dummy = {\n  isLoggedIn: true,\n  mainPosts: [{\n    User: {\n      id: 1,\n      nickname: '정준일'\n    },\n    img: 'http://zzalbang.kr/wp-content/uploads/2019/06/944afa44ly1g3bon5dh4kj20u0140gvl-851x1024.jpg',\n    content: '요즘 핫한 배우'\n  }, {\n    User: {\n      id: 2,\n      nickname: '정준이'\n    },\n    img: 'https://i.pinimg.com/236x/94/c7/82/94c7822c6c5c33cd442c3b8d4fe524c6.jpg',\n    content: '김근식 군 추천배우'\n  }, {\n    User: {\n      id: 3,\n      nickname: '정준삼'\n    },\n    img: 'http://simg.donga.com/ugc/MLBPARK/Board/15/18/54/29/1518542968657.jpg',\n    content: '아스카짱!'\n  }],\n  imagePaths: []\n};\n\nvar Home = function Home() {\n  var dispatch = useDispatch(); //dispatch() 는 useState 의 setState라고 생각하면 편하다.\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      isLoggedIn = _useSelector.isLoggedIn,\n      user = _useSelector.user; //리덕스 STATE를 가져오기 위해서는 userSelector \n\n\n  useEffect(function () {\n    console.log('되야할 터인데??');\n    dispatch(loginAction);\n  }, []);\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, user ? __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }, \"\\uB85C\\uADF8\\uC778\\uB428\") : __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 39\n    }\n  }, \"\\uB85C\\uADF8\\uC778 \\uC548\\uB428\"), dummy.isLoggedIn && __jsx(PostForm, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 38\n    }\n  }), dummy.mainPosts.map(function (v, i) {\n    return __jsx(PostCard, {\n      key: v.User.id,\n      post: v,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 29\n      }\n    });\n  }));\n};\n\nexport default Home;","map":{"version":3,"sources":["D:/git Repository/practice/front/pages/index.js"],"names":["React","useEffect","PostForm","PostCard","useDispatch","useSelector","LOG_IN","loginAction","dummy","isLoggedIn","mainPosts","User","id","nickname","img","content","imagePaths","Home","dispatch","state","user","console","log","map","v","i"],"mappings":";;;;AACA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAASC,MAAT,EAAiBC,WAAjB,QAAoC,kBAApC;AAGA,IAAMC,KAAK,GAAG;AACVC,EAAAA,UAAU,EAAG,IADH;AAEVC,EAAAA,SAAS,EAAG,CACG;AAACC,IAAAA,IAAI,EAAG;AACJC,MAAAA,EAAE,EAAC,CADC;AAEJC,MAAAA,QAAQ,EAAC;AAFL,KAAR;AAKAC,IAAAA,GAAG,EAAC,6FALJ;AAMAC,IAAAA,OAAO,EAAC;AANR,GADH,EAYA;AAACJ,IAAAA,IAAI,EAAG;AACJC,MAAAA,EAAE,EAAC,CADC;AAEJC,MAAAA,QAAQ,EAAC;AAFL,KAAR;AAKAC,IAAAA,GAAG,EAAC,yEALJ;AAMAC,IAAAA,OAAO,EAAC;AANR,GAZA,EAsBA;AAACJ,IAAAA,IAAI,EAAG;AACJC,MAAAA,EAAE,EAAC,CADC;AAEJC,MAAAA,QAAQ,EAAC;AAFL,KAAR;AAKAC,IAAAA,GAAG,EAAC,uEALJ;AAMAC,IAAAA,OAAO,EAAC;AANR,GAtBA,CAFF;AAoCVC,EAAAA,UAAU,EAAG;AApCH,CAAd;;AAuCA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAI;AAEb,MAAMC,QAAQ,GAAGd,WAAW,EAA5B,CAFa,CAGe;;AAHf,qBAKeC,WAAW,CAAC,UAAAc,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAV;AAAA,GAAN,CAL1B;AAAA,MAKNX,UALM,gBAKNA,UALM;AAAA,MAKOW,IALP,gBAKOA,IALP,EAMe;;;AAC5BnB,EAAAA,SAAS,CAAC,YAAI;AACVoB,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAJ,IAAAA,QAAQ,CAACX,WAAD,CAAR;AAEH,GAJQ,EAIP,EAJO,CAAT;AAMA,SAEQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCa,IAAI,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAH,GAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAD1B,EAEKZ,KAAK,CAACC,UAAN,IAAoB,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFzB,EAGKD,KAAK,CAACE,SAAN,CAAgBa,GAAhB,CAAoB,UAACC,CAAD,EAAGC,CAAH,EAAO;AACxB,WACQ,MAAC,QAAD;AAAU,MAAA,GAAG,EAAED,CAAC,CAACb,IAAF,CAAOC,EAAtB;AAA0B,MAAA,IAAI,EAAEY,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADR;AAGH,GAJA,CAHL,CAFR;AAaH,CA1BD;;AA4BA,eAAeP,IAAf","sourcesContent":["\r\nimport React, {useEffect} from 'react'; \r\nimport PostForm from '../components/PostForm'\r\nimport PostCard from '../components/PostCard'\r\nimport {useDispatch ,useSelector} from 'react-redux'\r\nimport { LOG_IN, loginAction } from '../reducers/user';\r\n\r\n\r\nconst dummy = {\r\n    isLoggedIn : true,  \r\n    mainPosts : [\r\n                   {User : {\r\n                       id:1,\r\n                       nickname:'정준일',\r\n                      \r\n                   }, \r\n                   img:'http://zzalbang.kr/wp-content/uploads/2019/06/944afa44ly1g3bon5dh4kj20u0140gvl-851x1024.jpg',\r\n                   content:'요즘 핫한 배우', \r\n\r\n                }\r\n               \r\n                ,\r\n                {User : {\r\n                    id:2,\r\n                    nickname:'정준이',\r\n                    \r\n                }, \r\n                img:'https://i.pinimg.com/236x/94/c7/82/94c7822c6c5c33cd442c3b8d4fe524c6.jpg',\r\n                content:'김근식 군 추천배우', \r\n\r\n             }\r\n             ,\r\n                {User : {\r\n                    id:3,\r\n                    nickname:'정준삼',\r\n                    \r\n                }, \r\n                img:'http://simg.donga.com/ugc/MLBPARK/Board/15/18/54/29/1518542968657.jpg',\r\n                content:'아스카짱!', \r\n\r\n             }\r\n\r\n\r\n    ],\r\n    imagePaths : [],\r\n}\r\n\r\nconst Home = ()=>{\r\n\r\n    const dispatch = useDispatch(); \r\n                                //dispatch() 는 useState 의 setState라고 생각하면 편하다.\r\n                                \r\n    const {isLoggedIn , user} = useSelector(state => state.user);\r\n                                //리덕스 STATE를 가져오기 위해서는 userSelector \r\n    useEffect(()=>{\r\n        console.log('되야할 터인데??'); \r\n        dispatch(loginAction);\r\n\r\n    },[])\r\n\r\n    return (\r\n      \r\n            <div>\r\n            {user ? <div>로그인됨</div> : <div>로그인 안됨</div>}\r\n                {dummy.isLoggedIn && <PostForm />}\r\n                {dummy.mainPosts.map((v,i)=>{\r\n                    return (\r\n                            <PostCard key={v.User.id} post={v} />\r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n\r\n}\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}