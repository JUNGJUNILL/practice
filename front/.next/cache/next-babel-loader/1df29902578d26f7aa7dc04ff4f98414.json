{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\git Repository\\\\practice\\\\front\\\\components\\\\PostCard.js\";\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Card, Button, Avatar } from 'antd';\nimport { RetweetOutlined, HeartOutlined, EllipsisOutlined } from '@ant-design/icons';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\n\nvar PostCard = function PostCard(_ref) {\n  var post = _ref.post;\n\n  var _useState = useState(false),\n      commentFormOpend = _useState[0],\n      setCommentFormOpend = _useState[1];\n\n  var _useState2 = useState(''),\n      commentText = _useState2[0],\n      setCommentText = _useState2[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me;\n\n  var dispatch = useDispatch();\n  return __jsx(Card, {\n    key: +post.createdAt,\n    cover: post.img && __jsx(\"img\", {\n      alt: \"example\",\n      src: post.img,\n      style: {\n        width: '100px'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 32\n      }\n    }),\n    actions: [__jsx(RetweetOutlined, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }\n    }), __jsx(HeartOutlined, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }\n    }), __jsx(EllipsisOutlined, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }\n    })],\n    extra: __jsx(Button, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 20\n      }\n    }, \"\\uD314\\uB85C\\uC6B0\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 25\n      }\n    }, post.User.nickname[0]),\n    title: post.User.nickname,\n    description: post.content,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }));\n};\n\nPostCard.propTypes = {\n  //shape을 써서 객체의 각 props의 상세 타입을 지정할 수 있다.\n  post: PropTypes.shape({\n    User: PropTypes.object,\n    content: PropTypes.string,\n    img: PropTypes.string,\n    createdAt: PropTypes.object\n  })\n};\nexport default PostCard;","map":{"version":3,"sources":["D:/git Repository/practice/front/components/PostCard.js"],"names":["React","useState","Card","Button","Avatar","RetweetOutlined","HeartOutlined","EllipsisOutlined","PropTypes","useDispatch","useSelector","PostCard","post","commentFormOpend","setCommentFormOpend","commentText","setCommentText","state","user","me","dispatch","createdAt","img","width","User","nickname","content","propTypes","shape","object","string"],"mappings":";;;;AACA,OAAOA,KAAP,IAAcC,QAAd,QAA8B,OAA9B;AACA,SAAQC,IAAR,EAAeC,MAAf,EAAuBC,MAAvB,QAAmC,MAAnC;AACA,SAAQC,eAAR,EACQC,aADR,EAEQC,gBAFR,QAGO,mBAHP;AAIA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAW;AAAA,MAATC,IAAS,QAATA,IAAS;;AAAA,kBAEuBX,QAAQ,CAAC,KAAD,CAF/B;AAAA,MAEjBY,gBAFiB;AAAA,MAEAC,mBAFA;;AAAA,mBAGcb,QAAQ,CAAC,EAAD,CAHtB;AAAA,MAGjBc,WAHiB;AAAA,MAGJC,cAHI;;AAAA,qBAITN,WAAW,CAAC,UAAAO,KAAK;AAAA,WAAGA,KAAK,CAACC,IAAT;AAAA,GAAN,CAJF;AAAA,MAIhBC,EAJgB,gBAIhBA,EAJgB;;AAKxB,MAAMC,QAAQ,GAAGX,WAAW,EAA5B;AAEA,SACI,MAAC,IAAD;AACI,IAAA,GAAG,EAAE,CAACG,IAAI,CAACS,SADf;AAEI,IAAA,KAAK,EAAET,IAAI,CAACU,GAAL,IAAY;AAAK,MAAA,GAAG,EAAC,SAAT;AAAmB,MAAA,GAAG,EAAEV,IAAI,CAACU,GAA7B;AAAkC,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAC;AAAP,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFvB;AAGI,IAAA,OAAO,EAAE,CACL,MAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADK,EAEL,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFK,EAGL,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHK,CAHb;AAQI,IAAA,KAAK,EAAE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BARX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUI,MAAC,IAAD,CAAM,IAAN;AACI,IAAA,MAAM,EAAE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASX,IAAI,CAACY,IAAL,CAAUC,QAAV,CAAmB,CAAnB,CAAT,CADZ;AAEI,IAAA,KAAK,EAAEb,IAAI,CAACY,IAAL,CAAUC,QAFrB;AAGI,IAAA,WAAW,EAAEb,IAAI,CAACc,OAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,CADJ;AAmBH,CA1BD;;AA4BAf,QAAQ,CAACgB,SAAT,GAAqB;AACD;AAChBf,EAAAA,IAAI,EAAGJ,SAAS,CAACoB,KAAV,CAAgB;AACfJ,IAAAA,IAAI,EAAEhB,SAAS,CAACqB,MADD;AAEfH,IAAAA,OAAO,EAAGlB,SAAS,CAACsB,MAFL;AAGfR,IAAAA,GAAG,EAACd,SAAS,CAACsB,MAHC;AAIfT,IAAAA,SAAS,EAACb,SAAS,CAACqB;AAJL,GAAhB;AAFU,CAArB;AAUA,eAAelB,QAAf","sourcesContent":["\r\nimport React,{useState}  from 'react'\r\nimport {Card , Button, Avatar}from 'antd'\r\nimport {RetweetOutlined ,\r\n        HeartOutlined ,\r\n        EllipsisOutlined \r\n} from '@ant-design/icons';\r\nimport PropTypes from 'prop-types'\r\n\r\nimport {useDispatch ,useSelector} from 'react-redux'\r\n\r\nconst PostCard = ({post}) =>{\r\n    \r\n    const [commentFormOpend,setCommentFormOpend] = useState(false); \r\n    const [commentText, setCommentText] = useState(''); \r\n    const { me } = useSelector(state=> state.user); \r\n    const dispatch = useDispatch(); \r\n\r\n    return (\r\n        <Card\r\n            key={+post.createdAt}\r\n            cover={post.img && <img alt=\"example\" src={post.img} style={{width:'100px'}}/>}\r\n            actions={[\r\n                <RetweetOutlined />,\r\n                <HeartOutlined />,\r\n                <EllipsisOutlined />,\r\n            ]}\r\n            extra={<Button>팔로우</Button>}\r\n             >\r\n            <Card.Meta \r\n                avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\r\n                title={post.User.nickname}\r\n                description={post.content}\r\n            />\r\n        </Card>\r\n    )\r\n     \r\n}\r\n\r\nPostCard.propTypes = {\r\n                    //shape을 써서 객체의 각 props의 상세 타입을 지정할 수 있다.\r\n    post : PropTypes.shape({\r\n            User: PropTypes.object,\r\n            content : PropTypes.string,\r\n            img:PropTypes.string,\r\n            createdAt:PropTypes.object\r\n    })\r\n}\r\n\r\nexport default PostCard; "]},"metadata":{},"sourceType":"module"}