{"ast":null,"code":"import { all, call, fork, put, takeEvery } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { FOLLOW_USER_FAILURE, FOLLOW_USER_REQUEST, FOLLOW_USER_SUCCESS, LOAD_USER_FAILURE, LOAD_USER_REQUEST, LOAD_USER_SUCCESS, LOG_IN_FAILURE, LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_OUT_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, SIGN_UP_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, UNFOLLOW_USER_FAILURE, UNFOLLOW_USER_REQUEST, UNFOLLOW_USER_SUCCESS } from '../reducers/user';\n\nfunction logInAPI(loginData) {\n  // 서버에 요청을 보내는 부분\n  return axios.post('/user/login', loginData, {\n    withCredentials: true\n  });\n}\n\nfunction* logIn(action) {\n  try {\n    const result = yield call(logInAPI, action.data);\n    const loginInfo = yield result.then(resolve => {\n      return resolve.data;\n    });\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: loginInfo\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: LOG_IN_FAILURE\n    });\n  }\n}\n\nfunction* watchLogIn() {\n  yield takeEvery(LOG_IN_REQUEST, logIn);\n}\n\nfunction signUpAPI(signUpData) {\n  // 서버에 요청을 보내는 부분\n  return axios.post('/user/', signUpData);\n}\n\nfunction* signUp(action) {\n  try {\n    // yield call(signUpAPI);\n    yield call(signUpAPI, action.data);\n    yield put({\n      // put은 dispatch 동일\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (e) {\n    // loginAPI 실패\n    console.error(e);\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchSignUp() {\n  yield takeEvery(SIGN_UP_REQUEST, signUp);\n}\n\nfunction logOutAPI() {\n  // 서버에 요청을 보내는 부분\n  return axios.post('/user/logout', {}, {\n    withCredentials: true\n  });\n}\n\nfunction* logOut() {\n  try {\n    // yield call(logOutAPI);\n    yield call(logOutAPI);\n    yield put({\n      // put은 dispatch 동일\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (e) {\n    // loginAPI 실패\n    console.error(e);\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchLogOut() {\n  yield takeEvery(LOG_OUT_REQUEST, logOut);\n}\n\nfunction loadUserAPI(userId) {\n  // 서버에 요청을 보내는 부분\n  return axios.get(userId ? `/user/${userId}` : '/user/', {\n    withCredentials: true\n  });\n}\n\nfunction* loadUser(action) {\n  try {\n    // yield call(loadUserAPI);\n    const result = yield call(loadUserAPI, action.data);\n    yield put({\n      // put은 dispatch 동일\n      type: LOAD_USER_SUCCESS,\n      data: result.data,\n      me: !action.data\n    });\n  } catch (e) {\n    // loginAPI 실패\n    console.error(e);\n    yield put({\n      type: LOAD_USER_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchLoadUser() {\n  yield takeEvery(LOAD_USER_REQUEST, loadUser);\n}\n\nfunction followAPI(userId) {\n  // 서버에 요청을 보내는 부분\n  return axios.post(`/user/${userId}/follow`, {}, {\n    withCredentials: true\n  });\n}\n\nfunction* follow(action) {\n  try {\n    const result = yield call(followAPI, action.data);\n    console.log('result==>', result);\n    const followInfo = yield result.then(resolve => {\n      return resolve.data;\n    });\n    console.log('followInfo==>', followInfo);\n    yield put({\n      type: FOLLOW_USER_SUCCESS,\n      data: followInfo\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: FOLLOW_USER_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchFollow() {\n  yield takeEvery(FOLLOW_USER_REQUEST, follow);\n}\n\nfunction unfollowAPI(userId) {\n  // 서버에 요청을 보내는 부분\n  return axios.delete(`/user/${userId}/follow`, {\n    withCredentials: true\n  });\n}\n\nfunction* unfollow(action) {\n  try {\n    const result = yield call(unfollowAPI, action.data);\n    const unFollowInfo = yield result.then(resolve => {\n      return resolve.data;\n    });\n    yield put({\n      type: UNFOLLOW_USER_SUCCESS,\n      data: unFollowInfo\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: UNFOLLOW_USER_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchUnfollow() {\n  yield takeEvery(UNFOLLOW_USER_REQUEST, unfollow);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogIn), fork(watchLogOut), fork(watchLoadUser), fork(watchSignUp), fork(watchFollow), fork(watchUnfollow)]);\n}","map":{"version":3,"sources":["D:/git Repository/practice/front/sagas/user.js"],"names":["all","call","fork","put","takeEvery","axios","FOLLOW_USER_FAILURE","FOLLOW_USER_REQUEST","FOLLOW_USER_SUCCESS","LOAD_USER_FAILURE","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOG_IN_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_OUT_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","SIGN_UP_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","UNFOLLOW_USER_FAILURE","UNFOLLOW_USER_REQUEST","UNFOLLOW_USER_SUCCESS","logInAPI","loginData","post","withCredentials","logIn","action","result","data","loginInfo","then","resolve","type","e","console","error","watchLogIn","signUpAPI","signUpData","signUp","watchSignUp","logOutAPI","logOut","watchLogOut","loadUserAPI","userId","get","loadUser","me","watchLoadUser","followAPI","follow","log","followInfo","watchFollow","unfollowAPI","delete","unfollow","unFollowInfo","watchUnfollow","userSaga"],"mappings":"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","sourcesContent":["import { all, call, fork, put, takeEvery } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport {\r\n\r\n  FOLLOW_USER_FAILURE,\r\n  FOLLOW_USER_REQUEST,\r\n  FOLLOW_USER_SUCCESS,\r\n  LOAD_USER_FAILURE,\r\n  LOAD_USER_REQUEST,\r\n  LOAD_USER_SUCCESS,\r\n  LOG_IN_FAILURE,\r\n  LOG_IN_REQUEST,\r\n  LOG_IN_SUCCESS,\r\n  LOG_OUT_FAILURE,\r\n  LOG_OUT_REQUEST,\r\n  LOG_OUT_SUCCESS, \r\n  SIGN_UP_FAILURE,\r\n  SIGN_UP_REQUEST,\r\n  SIGN_UP_SUCCESS,\r\n  UNFOLLOW_USER_FAILURE,\r\n  UNFOLLOW_USER_REQUEST,\r\n  UNFOLLOW_USER_SUCCESS,\r\n} from '../reducers/user';\r\n\r\nfunction logInAPI(loginData) {\r\n  // 서버에 요청을 보내는 부분\r\n  return axios.post('/user/login', loginData, {\r\n    withCredentials: true,\r\n  });\r\n}\r\n\r\nfunction* logIn(action) {\r\n    try{\r\n        \r\n        const result    = yield call(logInAPI,action.data);  \r\n        const loginInfo = yield result.then((resolve)=>{\r\n           \r\n           return resolve.data; \r\n           \r\n        }); \r\n\r\n      \r\n       yield  put({\r\n           type: LOG_IN_SUCCESS,\r\n           data: loginInfo,\r\n       });\r\n\r\n   }catch(e){\r\n       console.error(e); \r\n       yield put({\r\n           type:LOG_IN_FAILURE,\r\n       });\r\n   }\r\n\r\n}\r\n\r\nfunction* watchLogIn() {\r\n  yield takeEvery(LOG_IN_REQUEST, logIn);\r\n}\r\n\r\nfunction signUpAPI(signUpData) {\r\n  // 서버에 요청을 보내는 부분\r\n  return axios.post('/user/', signUpData);\r\n}\r\n\r\nfunction* signUp(action) {\r\n  try {\r\n    // yield call(signUpAPI);\r\n    yield call(signUpAPI, action.data);\r\n    yield put({ // put은 dispatch 동일\r\n      type: SIGN_UP_SUCCESS,\r\n    });\r\n  } catch (e) { // loginAPI 실패\r\n    console.error(e);\r\n    yield put({\r\n      type: SIGN_UP_FAILURE,\r\n      error: e,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchSignUp() {\r\n  yield takeEvery(SIGN_UP_REQUEST, signUp);\r\n}\r\n\r\nfunction logOutAPI() {\r\n  // 서버에 요청을 보내는 부분\r\n  return axios.post('/user/logout', {}, {\r\n    withCredentials: true,\r\n  });\r\n}\r\n\r\nfunction* logOut() {\r\n  try {\r\n    // yield call(logOutAPI);\r\n    yield call(logOutAPI);\r\n    yield put({ // put은 dispatch 동일\r\n      type: LOG_OUT_SUCCESS,\r\n    });\r\n  } catch (e) { // loginAPI 실패\r\n    console.error(e);\r\n    yield put({\r\n      type: LOG_OUT_FAILURE,\r\n      error: e,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchLogOut() {\r\n  yield takeEvery(LOG_OUT_REQUEST, logOut);\r\n}\r\n\r\nfunction loadUserAPI(userId) {\r\n  // 서버에 요청을 보내는 부분\r\n  return axios.get(userId ? `/user/${userId}` : '/user/', {\r\n    withCredentials: true,\r\n  });\r\n}\r\n\r\nfunction* loadUser(action) {\r\n  try {\r\n    // yield call(loadUserAPI);\r\n    const result = yield call(loadUserAPI, action.data);\r\n    yield put({ // put은 dispatch 동일\r\n      type: LOAD_USER_SUCCESS,\r\n      data: result.data,\r\n      me: !action.data,\r\n    });\r\n  } catch (e) { // loginAPI 실패\r\n    console.error(e);\r\n    yield put({\r\n      type: LOAD_USER_FAILURE,\r\n      error: e,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchLoadUser() {\r\n  yield takeEvery(LOAD_USER_REQUEST, loadUser);\r\n}\r\n\r\nfunction followAPI(userId) {\r\n  // 서버에 요청을 보내는 부분\r\n  return axios.post(`/user/${userId}/follow`, {}, {\r\n    withCredentials: true,\r\n  });\r\n}\r\n\r\nfunction* follow(action) {\r\n    try{\r\n\r\n      \r\n        const result   = yield call(followAPI,action.data);  \r\n\r\n        console.log('result==>',result); \r\n        const followInfo = yield result.then((resolve)=>{\r\n            \r\n            return resolve.data; \r\n         }); \r\n\r\n            console.log('followInfo==>',followInfo); \r\n        yield put({\r\n                type: FOLLOW_USER_SUCCESS,\r\n                data: followInfo, \r\n\r\n            })\r\n\r\n    }catch(e){\r\n        console.error(e); \r\n\r\n        yield put({\r\n            type:FOLLOW_USER_FAILURE,\r\n            error:e,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchFollow() {\r\n  yield takeEvery(FOLLOW_USER_REQUEST, follow);\r\n}\r\n\r\nfunction unfollowAPI(userId) {\r\n  // 서버에 요청을 보내는 부분\r\n  return axios.delete(`/user/${userId}/follow`, {\r\n    withCredentials: true,\r\n  });\r\n}\r\n\r\nfunction* unfollow(action) {\r\n    try{\r\n\r\n      \r\n        const result   = yield call(unfollowAPI,action.data);  \r\n        const unFollowInfo = yield result.then((resolve)=>{\r\n            \r\n            return resolve.data; \r\n         }); \r\n\r\n        yield put({\r\n                type: UNFOLLOW_USER_SUCCESS,\r\n                data: unFollowInfo, \r\n\r\n            })\r\n\r\n    }catch(e){\r\n        console.error(e); \r\n\r\n        yield put({\r\n            type:UNFOLLOW_USER_FAILURE,\r\n            error:e,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchUnfollow() {\r\n  yield takeEvery(UNFOLLOW_USER_REQUEST, unfollow);\r\n}\r\n\r\n\r\n\r\n\r\nexport default function* userSaga() {\r\n  yield all([\r\n    fork(watchLogIn),\r\n    fork(watchLogOut),\r\n    fork(watchLoadUser),\r\n    fork(watchSignUp),\r\n    fork(watchFollow),\r\n    fork(watchUnfollow),\r\n\r\n  ]);\r\n}"]},"metadata":{},"sourceType":"module"}