{"ast":null,"code":"import { all, fork, takeLatest, put, delay } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE } from '../reducers/post';\naxios.defaults.baseURL = 'http://captainryan.gonetis.com:3065/api';\n\nfunction addPostAPI(postData) {\n  return axios.post('/post', postData, {\n    withCredentials: true\n  });\n}\n\nfunction* addPost() {\n  try {\n    yield delay(2000);\n    yield put({\n      type: ADD_POST_SUCCESS\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: ADD_POST_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* whatchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction addCommentAPI() {}\n\nfunction* addComment(action) {\n  try {\n    console.log('action.data.postId==>', action.data.postId);\n    yield delay(2000);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: {\n        poSstId: action.data.postId\n      }\n    });\n  } catch (e) {\n    console.log(e);\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* whatchAddComment() {\n  console.log('whatchAddComment');\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* postSaga() {\n  yield all([fork(whatchAddPost), fork(whatchAddComment)]);\n}","map":{"version":3,"sources":["D:/git Repository/practice/front/sagas/post.js"],"names":["all","fork","takeLatest","put","delay","axios","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","defaults","baseURL","addPostAPI","postData","post","withCredentials","addPost","type","e","console","error","whatchAddPost","addCommentAPI","addComment","action","log","data","postId","poSstId","whatchAddComment","postSaga"],"mappings":"AAAA,SAAQA,GAAR,EAAYC,IAAZ,EAAiBC,UAAjB,EAA6BC,GAA7B,EAAkCC,KAAlC,QAA8C,oBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,EAA2BC,gBAA3B,EAA6CC,gBAA7C,EAA+DC,mBAA/D,EAAoFC,mBAApF,EAAyGC,mBAAzG,QAAoI,kBAApI;AAEAN,KAAK,CAACO,QAAN,CAAeC,OAAf,GAAuB,yCAAvB;;AAEA,SAASC,UAAT,CAAoBC,QAApB,EAA6B;AAEzB,SAAOV,KAAK,CAACW,IAAN,CAAW,OAAX,EAAmBD,QAAnB,EAA4B;AAACE,IAAAA,eAAe,EAAC;AAAjB,GAA5B,CAAP;AACH;;AACD,UAAUC,OAAV,GAAmB;AAEf,MAAG;AACK,UAAMd,KAAK,CAAC,IAAD,CAAX;AACA,UAAMD,GAAG,CAAC;AACNgB,MAAAA,IAAI,EAACZ;AADC,KAAD,CAAT;AAIP,GAND,CAMC,OAAMa,CAAN,EAAQ;AACLC,IAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACA,UAAMjB,GAAG,CAAC;AACNgB,MAAAA,IAAI,EAACX,gBADC;AAENc,MAAAA,KAAK,EAAEF;AAFD,KAAD,CAAT;AAKH;AAGJ;;AACD,UAAUG,aAAV,GAAyB;AACrB,QAAMrB,UAAU,CAACI,gBAAD,EAAkBY,OAAlB,CAAhB;AAEH;;AAKD,SAASM,aAAT,GAAwB,CAEvB;;AAED,UAAUC,UAAV,CAAqBC,MAArB,EAA4B;AAExB,MAAG;AACCL,IAAAA,OAAO,CAACM,GAAR,CAAY,uBAAZ,EAAsCD,MAAM,CAACE,IAAP,CAAYC,MAAlD;AACA,UAAMzB,KAAK,CAAC,IAAD,CAAX;AACA,UAAMD,GAAG,CAAC;AACNgB,MAAAA,IAAI,EAACT,mBADC;AAENkB,MAAAA,IAAI,EAAC;AACDE,QAAAA,OAAO,EAACJ,MAAM,CAACE,IAAP,CAAYC;AADnB;AAFC,KAAD,CAAT;AAOP,GAVG,CAUH,OAAMT,CAAN,EAAQ;AACLC,IAAAA,OAAO,CAACM,GAAR,CAAYP,CAAZ;AACA,UAAMjB,GAAG,CAAC;AACNgB,MAAAA,IAAI,EAACR,mBADC;AAENW,MAAAA,KAAK,EAAEF;AAFD,KAAD,CAAT;AAKH;AAGA;;AAED,UAAUW,gBAAV,GAA4B;AACxBV,EAAAA,OAAO,CAACM,GAAR,CAAY,kBAAZ;AACA,QAAMzB,UAAU,CAACO,mBAAD,EAAsBgB,UAAtB,CAAhB;AAEH;;AAGD,eAAe,UAAUO,QAAV,GAAqB;AAEnC,QAAMhC,GAAG,CAAC,CACNC,IAAI,CAACsB,aAAD,CADE,EAENtB,IAAI,CAAC8B,gBAAD,CAFE,CAAD,CAAT;AAKA","sourcesContent":["import {all,fork,takeLatest, put, delay} from 'redux-saga/effects'; \r\nimport axios from 'axios';\r\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE } from '../reducers/post';\r\n\r\naxios.defaults.baseURL='http://captainryan.gonetis.com:3065/api';\r\n\r\nfunction addPostAPI(postData){\r\n\r\n    return axios.post('/post',postData,{withCredentials:true}); \r\n}\r\nfunction* addPost(){\r\n\r\n    try{\r\n            yield delay(2000);\r\n            yield put({\r\n                type:ADD_POST_SUCCESS,\r\n            });\r\n\r\n    }catch(e){\r\n        console.error(e); \r\n        yield put({\r\n            type:ADD_POST_FAILURE,\r\n            error: e,\r\n        })\r\n      \r\n    }\r\n\r\n\r\n}\r\nfunction* whatchAddPost(){\r\n    yield takeLatest(ADD_POST_REQUEST,addPost); \r\n\r\n}\r\n\r\n\r\n\r\n\r\nfunction addCommentAPI(){\r\n\r\n}\r\n\r\nfunction* addComment(action){\r\n\r\n    try{\r\n        console.log('action.data.postId==>' , action.data.postId); \r\n        yield delay(2000);\r\n        yield put({\r\n            type:ADD_COMMENT_SUCCESS,\r\n            data:{\r\n                poSstId:action.data.postId,\r\n            },\r\n        });\r\n\r\n}catch(e){\r\n    console.log(e); \r\n    yield put({\r\n        type:ADD_COMMENT_FAILURE,\r\n        error: e,\r\n    })\r\n  \r\n}\r\n\r\n\r\n}\r\n\r\nfunction* whatchAddComment(){\r\n    console.log('whatchAddComment'); \r\n    yield takeLatest(ADD_COMMENT_REQUEST, addComment); \r\n    \r\n}\r\n\r\n\r\nexport default function* postSaga() {\r\n\r\n yield all([\r\n     fork(whatchAddPost), \r\n     fork(whatchAddComment), \r\n ]); \r\n\r\n}"]},"metadata":{},"sourceType":"module"}