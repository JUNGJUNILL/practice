{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(loginAPI),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(signUpAPI),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(logoutAPI),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(followAPI),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(unFollowAPI),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogin),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(watchSignUp),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogout),\n    _marked9 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadUser),\n    _marked10 = /*#__PURE__*/_regeneratorRuntime.mark(watchFollowUser),\n    _marked11 = /*#__PURE__*/_regeneratorRuntime.mark(watchUnFollowUser),\n    _marked12 = /*#__PURE__*/_regeneratorRuntime.mark(login),\n    _marked13 = /*#__PURE__*/_regeneratorRuntime.mark(signUp),\n    _marked14 = /*#__PURE__*/_regeneratorRuntime.mark(logout),\n    _marked15 = /*#__PURE__*/_regeneratorRuntime.mark(loadUser),\n    _marked16 = /*#__PURE__*/_regeneratorRuntime.mark(follow),\n    _marked17 = /*#__PURE__*/_regeneratorRuntime.mark(unFollow),\n    _marked18 = /*#__PURE__*/_regeneratorRuntime.mark(hello),\n    _marked19 = /*#__PURE__*/_regeneratorRuntime.mark(watchHello),\n    _marked20 = /*#__PURE__*/_regeneratorRuntime.mark(userSaga);\n\nimport { all, fork, takeLatest, call, put, delay, takeEvery, take } from 'redux-saga/effects'; //이 외에도\n// race, cancel, select, throttle, debounce 등 도 있다. \n\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, SIGN_UP_REQUEST, SIGN_UP_FAILURE, SIGN_UP_SUCCESS, LOG_OUT_REQUEST, LOG_OUT_FAILURE, LOG_OUT_SUCCESS, LOAD_USER_SUCCESS, LOAD_USER_FAILURE, LOAD_USER_REQUEST, FOLLOW_USER_REQUEST, UNFOLLOW_USER_REQUEST, FOLLOW_USER_SUCCESS, FOLLOW_USER_FAILURE, UNFOLLOW_USER_SUCCESS, UNFOLLOW_USER_FAILURE } from '../reducers/user';\nimport axios from 'axios'; //call : 함수 동기적 호출   (순서를 지켜서 실행해야 하는 경우)\n//fort : 함수 비동기적 호출  \n//---------------------------둘 다 함수를 실행시켜준다.\n//put  : 액션 , 사가의 dispatch\n//take : 해당 액션이 dispatch되면 제너레이터를 next하는 이펙트 \n//all  : 여러 이펙트를 동시에 실행 할 수 있게 합니다.\n\nexport var HELLO_SAGA = 'HELLO_SAGA'; //-----------------------------------API\n\nfunction loginAPI(loginData) {\n  return _regeneratorRuntime.wrap(function loginAPI$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          return _context.abrupt(\"return\", axios.post('/user/login', loginData, {\n            withCredentials: true\n          }));\n\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n} //▲백엔드와 프론트간에 쿠키를 주고 받을 수 있다.\n\n\nfunction signUpAPI(signUpData) {\n  return _regeneratorRuntime.wrap(function signUpAPI$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          return _context2.abrupt(\"return\", axios.post('/user/signUp', signUpData, {\n            withCredentials: true\n          }));\n\n        case 1:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nfunction logoutAPI() {\n  return _regeneratorRuntime.wrap(function logoutAPI$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          return _context3.abrupt(\"return\", axios.post('/user/logout', {}, {\n            withCredentials: true\n          }));\n\n        case 1:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n} // function* loadUserAPI(userId){\n//     return axios.get(userId? `/user/${userId}`:'/user/',{withCredentials:true}); \n// }\n\n\nfunction loadUserAPI(userId) {\n  // 서버에 요청을 보내는 부분\n  return axios.get(userId ? \"/user/\".concat(userId) : '/user/', {\n    withCredentials: true\n  });\n}\n\nfunction followAPI(userId) {\n  return _regeneratorRuntime.wrap(function followAPI$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          return _context4.abrupt(\"return\", axios.post(\"/user/\".concat(userId, \"/follow\"), {}, {\n            withCredentials: true\n          }));\n\n        case 1:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\n\nfunction unFollowAPI(userId) {\n  return _regeneratorRuntime.wrap(function unFollowAPI$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          return _context5.abrupt(\"return\", axios[\"delete\"](\"/user/\".concat(userId, \"/follow\"), {\n            withCredentials: true\n          }));\n\n        case 1:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5);\n} //-----------------------------------END API\n//-----------------------------------WATCH\n\n\nfunction watchLogin() {\n  return _regeneratorRuntime.wrap(function watchLogin$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeEvery(LOG_IN_REQUEST, login);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}\n\nfunction watchSignUp() {\n  return _regeneratorRuntime.wrap(function watchSignUp$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return takeEvery(SIGN_UP_REQUEST, signUp);\n\n        case 2:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7);\n}\n\nfunction watchLogout() {\n  return _regeneratorRuntime.wrap(function watchLogout$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return takeEvery(LOG_OUT_REQUEST, logout);\n\n        case 2:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8);\n}\n\nfunction watchLoadUser() {\n  return _regeneratorRuntime.wrap(function watchLoadUser$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.next = 2;\n          return takeEvery(LOAD_USER_REQUEST, loadUser);\n\n        case 2:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9);\n}\n\nfunction watchFollowUser() {\n  return _regeneratorRuntime.wrap(function watchFollowUser$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.next = 2;\n          return takeEvery(FOLLOW_USER_REQUEST, follow);\n\n        case 2:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked10);\n}\n\nfunction watchUnFollowUser() {\n  return _regeneratorRuntime.wrap(function watchUnFollowUser$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.next = 2;\n          return takeLatest(UNFOLLOW_USER_REQUEST, unFollow);\n\n        case 2:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked11);\n} //-----------------------------------END WATCH \n\n\nfunction login(action) {\n  var result, loginInfo;\n  return _regeneratorRuntime.wrap(function login$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          _context12.prev = 0;\n          _context12.next = 3;\n          return call(loginAPI, action.data);\n\n        case 3:\n          result = _context12.sent;\n          _context12.next = 6;\n          return result.then(function (resolve) {\n            return resolve.data;\n          });\n\n        case 6:\n          loginInfo = _context12.sent;\n          _context12.next = 9;\n          return put({\n            type: LOG_IN_SUCCESS,\n            data: loginInfo\n          });\n\n        case 9:\n          _context12.next = 16;\n          break;\n\n        case 11:\n          _context12.prev = 11;\n          _context12.t0 = _context12[\"catch\"](0);\n          console.error(_context12.t0);\n          _context12.next = 16;\n          return put({\n            type: LOG_IN_FAILURE\n          });\n\n        case 16:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, _marked12, null, [[0, 11]]);\n}\n\nfunction signUp(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function signUp$(_context13) {\n    while (1) {\n      switch (_context13.prev = _context13.next) {\n        case 0:\n          _context13.prev = 0;\n          _context13.next = 3;\n          return call(signUpAPI, action.data);\n\n        case 3:\n          result = _context13.sent;\n          console.log('result----', result);\n          _context13.next = 7;\n          return put({\n            type: SIGN_UP_SUCCESS\n          });\n\n        case 7:\n          _context13.next = 14;\n          break;\n\n        case 9:\n          _context13.prev = 9;\n          _context13.t0 = _context13[\"catch\"](0);\n          console.error(_context13.t0);\n          _context13.next = 14;\n          return put({\n            type: SIGN_UP_FAILURE\n          });\n\n        case 14:\n        case \"end\":\n          return _context13.stop();\n      }\n    }\n  }, _marked13, null, [[0, 9]]);\n}\n\nfunction logout() {\n  return _regeneratorRuntime.wrap(function logout$(_context14) {\n    while (1) {\n      switch (_context14.prev = _context14.next) {\n        case 0:\n          _context14.prev = 0;\n          _context14.next = 3;\n          return call(logoutAPI);\n\n        case 3:\n          _context14.next = 5;\n          return put({\n            type: LOG_OUT_SUCCESS\n          });\n\n        case 5:\n          _context14.next = 12;\n          break;\n\n        case 7:\n          _context14.prev = 7;\n          _context14.t0 = _context14[\"catch\"](0);\n          console.error(_context14.t0);\n          _context14.next = 12;\n          return put({\n            type: LOG_OUT_FAILURE\n          });\n\n        case 12:\n        case \"end\":\n          return _context14.stop();\n      }\n    }\n  }, _marked14, null, [[0, 7]]);\n}\n\nfunction loadUser(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadUser$(_context15) {\n    while (1) {\n      switch (_context15.prev = _context15.next) {\n        case 0:\n          _context15.prev = 0;\n          _context15.next = 3;\n          return call(loadUserAPI);\n\n        case 3:\n          result = _context15.sent;\n          _context15.next = 6;\n          return put({\n            type: LOAD_USER_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context15.next = 13;\n          break;\n\n        case 8:\n          _context15.prev = 8;\n          _context15.t0 = _context15[\"catch\"](0);\n          console.error(_context15.t0);\n          _context15.next = 13;\n          return put({\n            type: LOAD_USER_FAILURE,\n            error: _context15.t0\n          });\n\n        case 13:\n        case \"end\":\n          return _context15.stop();\n      }\n    }\n  }, _marked15, null, [[0, 8]]);\n}\n\nfunction follow(action) {\n  var result, followInfo;\n  return _regeneratorRuntime.wrap(function follow$(_context16) {\n    while (1) {\n      switch (_context16.prev = _context16.next) {\n        case 0:\n          _context16.prev = 0;\n          _context16.next = 3;\n          return call(followAPI, action.data);\n\n        case 3:\n          result = _context16.sent;\n          console.log('result==>', result);\n          _context16.next = 7;\n          return result.then(function (resolve) {\n            return resolve.data;\n          });\n\n        case 7:\n          followInfo = _context16.sent;\n          console.log('followInfo==>', followInfo);\n          _context16.next = 11;\n          return put({\n            type: FOLLOW_USER_SUCCESS,\n            data: followInfo\n          });\n\n        case 11:\n          _context16.next = 18;\n          break;\n\n        case 13:\n          _context16.prev = 13;\n          _context16.t0 = _context16[\"catch\"](0);\n          console.error(_context16.t0);\n          _context16.next = 18;\n          return put({\n            type: FOLLOW_USER_FAILURE,\n            error: _context16.t0\n          });\n\n        case 18:\n        case \"end\":\n          return _context16.stop();\n      }\n    }\n  }, _marked16, null, [[0, 13]]);\n}\n\nfunction unFollow(action) {\n  var result, unFollowInfo;\n  return _regeneratorRuntime.wrap(function unFollow$(_context17) {\n    while (1) {\n      switch (_context17.prev = _context17.next) {\n        case 0:\n          _context17.prev = 0;\n          _context17.next = 3;\n          return call(unFollowAPI, action.data);\n\n        case 3:\n          result = _context17.sent;\n          _context17.next = 6;\n          return result.then(function (resolve) {\n            return resolve.data;\n          });\n\n        case 6:\n          unFollowInfo = _context17.sent;\n          _context17.next = 9;\n          return put({\n            type: UNFOLLOW_USER_SUCCESS,\n            data: unFollowInfo\n          });\n\n        case 9:\n          _context17.next = 16;\n          break;\n\n        case 11:\n          _context17.prev = 11;\n          _context17.t0 = _context17[\"catch\"](0);\n          console.error(_context17.t0);\n          _context17.next = 16;\n          return put({\n            type: UNFOLLOW_USER_FAILURE,\n            error: _context17.t0\n          });\n\n        case 16:\n        case \"end\":\n          return _context17.stop();\n      }\n    }\n  }, _marked17, null, [[0, 11]]);\n}\n\nfunction hello() {\n  return _regeneratorRuntime.wrap(function hello$(_context18) {\n    while (1) {\n      switch (_context18.prev = _context18.next) {\n        case 0:\n          _context18.next = 2;\n          return delay(1000);\n\n        case 2:\n          _context18.next = 4;\n          return put({\n            type: 'Bye Saga'\n          });\n\n        case 4:\n        case \"end\":\n          return _context18.stop();\n      }\n    }\n  }, _marked18);\n}\n\nfunction watchHello() {\n  return _regeneratorRuntime.wrap(function watchHello$(_context19) {\n    while (1) {\n      switch (_context19.prev = _context19.next) {\n        case 0:\n          _context19.next = 2;\n          return takeLatest(HELLO_SAGA, hello);\n\n        case 2:\n        case \"end\":\n          return _context19.stop();\n      }\n    }\n  }, _marked19);\n} //이 기능을 takeLatest , takeEvery 로 대체할 수 있다. \n// function* watchHello(){\n//     console.log('before saga'); \n//     while(true){\n//         yield take(HELLO_SAGA); \n//         console.log('hello saga'); \n//     }\n// }\n\n\nexport default function userSaga() {\n  return _regeneratorRuntime.wrap(function userSaga$(_context20) {\n    while (1) {\n      switch (_context20.prev = _context20.next) {\n        case 0:\n          _context20.next = 2;\n          return all([fork(watchLogin), fork(watchLogout), fork(watchLoadUser), //fork(watchHello),\n          fork(watchSignUp), fork(watchFollowUser), fork(watchUnFollowUser)]);\n\n        case 2:\n        case \"end\":\n          return _context20.stop();\n      }\n    }\n  }, _marked20);\n}","map":{"version":3,"sources":["D:/git Repository/practice/front/sagas/user.js"],"names":["loginAPI","signUpAPI","logoutAPI","followAPI","unFollowAPI","watchLogin","watchSignUp","watchLogout","watchLoadUser","watchFollowUser","watchUnFollowUser","login","signUp","logout","loadUser","follow","unFollow","hello","watchHello","userSaga","all","fork","takeLatest","call","put","delay","takeEvery","take","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","SIGN_UP_REQUEST","SIGN_UP_FAILURE","SIGN_UP_SUCCESS","LOG_OUT_REQUEST","LOG_OUT_FAILURE","LOG_OUT_SUCCESS","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","LOAD_USER_REQUEST","FOLLOW_USER_REQUEST","UNFOLLOW_USER_REQUEST","FOLLOW_USER_SUCCESS","FOLLOW_USER_FAILURE","UNFOLLOW_USER_SUCCESS","UNFOLLOW_USER_FAILURE","axios","HELLO_SAGA","loginData","post","withCredentials","signUpData","loadUserAPI","userId","get","action","data","result","then","resolve","loginInfo","type","console","error","log","followInfo","unFollowInfo"],"mappings":"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","sourcesContent":["import {all ,fork, takeLatest, call, put, delay,takeEvery,take }from 'redux-saga/effects'; \r\n//이 외에도\r\n// race, cancel, select, throttle, debounce 등 도 있다. \r\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, SIGN_UP_REQUEST, SIGN_UP_FAILURE, SIGN_UP_SUCCESS, LOG_OUT_REQUEST, LOG_OUT_FAILURE, LOG_OUT_SUCCESS, LOAD_USER_SUCCESS, LOAD_USER_FAILURE, LOAD_USER_REQUEST, FOLLOW_USER_REQUEST, UNFOLLOW_USER_REQUEST, FOLLOW_USER_SUCCESS, FOLLOW_USER_FAILURE, UNFOLLOW_USER_SUCCESS, UNFOLLOW_USER_FAILURE } from '../reducers/user';\r\nimport axios from 'axios';\r\n\r\n//call : 함수 동기적 호출   (순서를 지켜서 실행해야 하는 경우)\r\n//fort : 함수 비동기적 호출  \r\n//---------------------------둘 다 함수를 실행시켜준다.\r\n\r\n//put  : 액션 , 사가의 dispatch\r\n//take : 해당 액션이 dispatch되면 제너레이터를 next하는 이펙트 \r\n//all  : 여러 이펙트를 동시에 실행 할 수 있게 합니다.\r\n\r\n\r\nexport const HELLO_SAGA = 'HELLO_SAGA'; \r\n\r\n\r\n//-----------------------------------API\r\nfunction* loginAPI(loginData){\r\n//서버에 요청하는 부분 \r\n    return axios.post('/user/login',loginData,{withCredentials:true}); \r\n}\r\n                                                                                          //▲백엔드와 프론트간에 쿠키를 주고 받을 수 있다.\r\n                                                                               \r\nfunction* signUpAPI(signUpData){\r\n    \r\n    return axios.post('/user/signUp',signUpData,{withCredentials:true}); \r\n}        \r\n\r\n\r\nfunction* logoutAPI(){\r\n\r\n    return axios.post('/user/logout',{},{withCredentials:true});\r\n                                    //▲POST로 보낼 때, 데이터 없더라도 빈 객체라도 보내야 한다.\r\n}\r\n\r\n// function* loadUserAPI(userId){\r\n    \r\n//     return axios.get(userId? `/user/${userId}`:'/user/',{withCredentials:true}); \r\n// }\r\n\r\nfunction loadUserAPI(userId) {\r\n  // 서버에 요청을 보내는 부분\r\n  return axios.get(userId ? `/user/${userId}` : '/user/', {\r\n    withCredentials: true,\r\n  });\r\n  }\r\n\r\nfunction* followAPI(userId){\r\n\r\n    return axios.post(`/user/${userId}/follow`,{},{withCredentials:true});\r\n                                             //▲post인 경우 데이터 없더라도 빈 객체라도 보내야 한다.\r\n}\r\n\r\nfunction* unFollowAPI(userId){\r\n\r\n    return axios.delete(`/user/${userId}/follow`, {\r\n        withCredentials: true,\r\n      });}\r\n//-----------------------------------END API\r\n\r\n\r\n//-----------------------------------WATCH\r\nfunction* watchLogin(){\r\n    yield takeEvery(LOG_IN_REQUEST,login); \r\n}\r\n\r\nfunction* watchSignUp(){\r\n    yield takeEvery(SIGN_UP_REQUEST,signUp)\r\n}\r\n\r\nfunction* watchLogout(){\r\n    yield takeEvery(LOG_OUT_REQUEST,logout); \r\n}\r\n\r\nfunction* watchLoadUser(){\r\n    yield takeEvery(LOAD_USER_REQUEST,loadUser); \r\n    \r\n}\r\n\r\n\r\nfunction* watchFollowUser(){\r\n\r\n    yield takeEvery(FOLLOW_USER_REQUEST,follow); \r\n}\r\n\r\nfunction* watchUnFollowUser(){\r\n    yield takeLatest(UNFOLLOW_USER_REQUEST,unFollow); \r\n}\r\n\r\n\r\n//-----------------------------------END WATCH \r\n\r\nfunction* login(action){\r\n   \r\n  \r\n    try{\r\n        \r\n         const result    = yield call(loginAPI,action.data);  \r\n         const loginInfo = yield result.then((resolve)=>{\r\n            \r\n            return resolve.data; \r\n            \r\n         }); \r\n\r\n       \r\n        yield  put({\r\n            type: LOG_IN_SUCCESS,\r\n            data: loginInfo,\r\n        });\r\n\r\n    }catch(e){\r\n        console.error(e); \r\n        yield put({\r\n            type:LOG_IN_FAILURE,\r\n        });\r\n    }\r\n\r\n}\r\n\r\nfunction* signUp(action){\r\n\r\n    try{\r\n    \r\n       const result =  yield call(signUpAPI,action.data); \r\n     \r\n        console.log('result----' , result); \r\n        yield put({\r\n                type: SIGN_UP_SUCCESS,\r\n            })\r\n\r\n    }catch(e){\r\n        console.error(e); \r\n        yield put({\r\n            type:SIGN_UP_FAILURE,\r\n        });\r\n    }\r\n\r\n}\r\n\r\nfunction* logout(){\r\n\r\n    try{\r\n\r\n        yield call(logoutAPI); \r\n        yield put({\r\n            type:LOG_OUT_SUCCESS, \r\n        })\r\n\r\n    }catch(e){\r\n        console.error(e); \r\n        yield put({\r\n            type:LOG_OUT_FAILURE, \r\n        });\r\n    }\r\n}\r\n\r\n\r\nfunction* loadUser(action){\r\n\r\n    try{\r\n   \r\n        const result   = yield call(loadUserAPI);  \r\n\r\n        yield put({\r\n                type: LOAD_USER_SUCCESS,\r\n                data: result.data,\r\n            })\r\n\r\n    }catch(e){\r\n        console.error(e); \r\n\r\n        yield put({\r\n            type:LOAD_USER_FAILURE,\r\n            error:e,\r\n        });\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction* follow(action){\r\n\r\n    try{\r\n\r\n      \r\n        const result   = yield call(followAPI,action.data);  \r\n\r\n        console.log('result==>',result); \r\n        const followInfo = yield result.then((resolve)=>{\r\n            \r\n            return resolve.data; \r\n         }); \r\n\r\n            console.log('followInfo==>',followInfo); \r\n        yield put({\r\n                type: FOLLOW_USER_SUCCESS,\r\n                data: followInfo, \r\n\r\n            })\r\n\r\n    }catch(e){\r\n        console.error(e); \r\n\r\n        yield put({\r\n            type:FOLLOW_USER_FAILURE,\r\n            error:e,\r\n        });\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nfunction* unFollow(action){\r\n\r\n    try{\r\n\r\n      \r\n        const result   = yield call(unFollowAPI,action.data);  \r\n        const unFollowInfo = yield result.then((resolve)=>{\r\n            \r\n            return resolve.data; \r\n         }); \r\n\r\n        yield put({\r\n                type: UNFOLLOW_USER_SUCCESS,\r\n                data: unFollowInfo, \r\n\r\n            })\r\n\r\n    }catch(e){\r\n        console.error(e); \r\n\r\n        yield put({\r\n            type:UNFOLLOW_USER_FAILURE,\r\n            error:e,\r\n        });\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction* hello(){\r\n\r\n    yield delay(1000); \r\n    yield put({\r\n        type:'Bye Saga'\r\n    })\r\n}\r\n\r\nfunction* watchHello(){\r\n     yield takeLatest(HELLO_SAGA, hello); \r\n}\r\n//이 기능을 takeLatest , takeEvery 로 대체할 수 있다. \r\n// function* watchHello(){\r\n//     console.log('before saga'); \r\n//     while(true){\r\n//         yield take(HELLO_SAGA); \r\n//         console.log('hello saga'); \r\n//     }\r\n// }\r\n\r\n\r\n\r\nexport default function* userSaga() {\r\n\r\n    yield all([\r\n        fork(watchLogin), \r\n        fork(watchLogout),\r\n        fork(watchLoadUser), \r\n        //fork(watchHello),\r\n        fork(watchSignUp),\r\n        fork(watchFollowUser), \r\n        fork(watchUnFollowUser), \r\n        \r\n    ]);\r\n\r\n}"]},"metadata":{},"sourceType":"module"}