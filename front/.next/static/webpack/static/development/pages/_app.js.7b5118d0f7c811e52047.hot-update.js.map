{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.7b5118d0f7c811e52047.hot-update.js","sources":["webpack:///./pages/_app.js"],"sourcesContent":["//next에서 제공하는 최상위 컴포넌트 파일 (_app.js로 직접 만들어야 한다. )\r\n//페이지들의 공통적인 부분기여주기 \r\n\r\nimport AppLayout from '../components/AppLayout'; \r\nimport Head from 'next/head'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n// 모든 컴포넌트는 _app.js를 공유한다. \r\n// redux는 state의 중앙통제실 역할을 하므로 모든 컴포넌트의 state를 컨트롤 하기 위해\r\n// _app.js에다가 redux를 연결해 주는 작업이 필요하다. \r\n\r\n//--react, redux 연결하기 \r\nimport {Provider} from 'react-redux'; //redux state 제공, 이것으로 전체 컴포넌트의 state를 관리 할 수 있다. \r\nimport reducer from '../reducers'; \r\nimport {createStore, compose, applyMiddleware} from 'redux'\r\nimport withRedux from 'next-redux-wrapper'\r\n\r\nconst NodeBird = ({Component,store}) =>{\r\n                    //▲ next에서 제공하는 props\r\n\r\n        return (\r\n        <Provider store={store}> {/*이 store가 redux state이다. 이 store가 전체 컴포넌트 state를 다 받는다. */}\r\n            <div>\r\n            <Head>\r\n                <title>NodeBird</title>\r\n                <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/antd/3.16.2/antd.min.css\"/>\r\n            </Head>\r\n            <AppLayout >\r\n                <Component />\r\n            </AppLayout>  \r\n            </div>\r\n        </Provider>\r\n\r\n        )\r\n\r\n}\r\nNodeBird.propTypes = {\r\n    Component: PropTypes.elementType,\r\n    store    : PropTypes.object, \r\n}\r\n\r\n\r\n//제로초가 그냥 외우라고함... \r\nexport default withRedux((initialState,options)=>{\r\n    const middleWares = [];\r\n                     \r\n                      \r\n    const enhancer = compose(\r\n                                applyMiddleware(...middleWares),\r\n                                typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION !== 'undefined'? window.__REDUX_DEVTOOLS_EXTENSION__() : (f)=>f,\r\n                                //브라우저에 REDUX DEVTOOLS 설치시 \r\n                                //window객체애 해당 변수(__REDUX_DEVTOOLS_EXTENSION)가 생성됨, __REDUX_DEVTOOLS_EXTENSION__()해당 함수를 사용할 수 있게됨\r\n\r\n                                );\r\n    const store = createStore(reducer,initialState,enhancer); \r\n\r\n    \r\n        return store; \r\n})(NodeBird); "],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AAAA;AACA;AACA;AAFA;AACA;AAMA;AACA;AAGA;AAEA;AAAA;AAEA;AAJA;AAOA;AAGA;AACA;;;;A","sourceRoot":""}