{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.f39c0cf54c6c6559d973.hot-update.js","sources":["webpack:///./components/PostForm.js"],"sourcesContent":["import React,{useEffect, useCallback, useState, useRef} from 'react'\r\nimport {Form, Button,Input}from 'antd'\r\n\r\nimport {useDispatch ,useSelector} from 'react-redux'\r\nimport { ADD_POST_REQUEST, UPLOAD_IMAGES_REQUEST, REMOVE_IMAGE } from '../reducers/post';\r\n\r\n\r\n\r\nconst PostForm = ({userInfo}) =>{\r\n\r\n    const dispatch=useDispatch();\r\n    const [text,setText] = useState(''); \r\n    const {imagePaths, isAddingPost, postAdded} = useSelector(state=>state.post);\r\n    const imageInput = useRef();\r\n\r\n    useEffect(()=>{\r\n        setText(''); \r\n    },[postAdded === true])\r\n\r\n    const onSubmitForm = useCallback((e)=>{\r\n        //e.preventDefault();\r\n        if(!text || !text.trim()){\r\n            alert('게시글을 입력해 주세요'); \r\n            return; \r\n        }\r\n        dispatch({\r\n                type:ADD_POST_REQUEST,\r\n                data: {\r\n                  content : text,\r\n                  UserId  : userInfo.id,\r\n                    },\r\n            });\r\n\r\n    },[text]); \r\n    \r\n\r\n\r\n    const onChangeText =useCallback( (e)=>{\r\n        setText(e.target.value); \r\n    },[]); \r\n\r\n    const onChangeImages =useCallback((e)=>{\r\n\r\n        console.log('읭??',e.target.files); \r\n        const imageFormData = new FormData(); //브라우저에서 제공 \r\n                                              //express bodyParser로 전송 불가능\r\n                                              //muter 미들웨어로 처리해야 한다.\r\n        //와... 무슨 문법이냐??? \r\n        [].forEach.call(e.target.files,(f)=>{\r\n            imageFormData.append('image',f); \r\n        });\r\n\r\n        dispatch({\r\n            type : UPLOAD_IMAGES_REQUEST,\r\n            data : imageFormData,\r\n        });\r\n    \r\n      \r\n    },[]); \r\n\r\n    const onClickImageUpload = useCallback(() =>{\r\n\r\n        imageInput.current.click(); \r\n    },[imageInput.current])\r\n\r\n    const onRemoveImage = useCallback((index)=>()=>{\r\n            dispatch({\r\n                typoe:REMOVE_IMAGE,\r\n                index,\r\n            }); \r\n    },[])\r\n\r\n    return(\r\n            \r\n                <Form style={{margin:'10px 0 20px'}} encType=\"multipart/form-data\" onFinish={onSubmitForm}>               \r\n                        \r\n                        <Input.TextArea maxLength={140} placeholder=\"어떤일이 있었나요?\" value={text} onChange={onChangeText} />\r\n                        <div>\r\n                            <input type=\"file\" multiple ref={imageInput} onChange={onChangeImages} hidden />\r\n                            <Button onClick={onClickImageUpload}>이미지 업로드</Button>\r\n                            <Button type=\"primary\" style={{float:'right'}} htmlType=\"submit\" loading={isAddingPost}>짹짹</Button>\r\n                        </div>\r\n                        <div>\r\n                        {imagePaths.map((v,i)=>{\r\n                            return (\r\n\r\n                                <div key={v} style={{display:'inline-block'}}>\r\n                                 <img src={`http://captainryan.gonetis.com:3065/${v}`} style={{width:'200px' }} alt={v} />\r\n                                <div>\r\n                                    <Button onClick={onRemoveImage(i)}>제거</Button>\r\n                                </div>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                        </div>\r\n                </Form>\r\n            )\r\n}\r\nexport default PostForm; "],"mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AAGA;AAAA;AAEA;AACA;AAHA;AAAA;AAAA;AACA;AADA;AAIA;AAAA;AAJA;AAAA;AAAA;AACA;AAIA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAFA;AAQA;AAIA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAMA;AAEA;AAEA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AALA;AAOA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAIA;AAIA;AACA;AAAA;;;;A","sourceRoot":""}