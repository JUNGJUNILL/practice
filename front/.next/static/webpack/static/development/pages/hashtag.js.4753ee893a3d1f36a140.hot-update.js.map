{"version":3,"file":"static/webpack/static\\development\\pages\\hashtag.js.4753ee893a3d1f36a140.hot-update.js","sources":["webpack:///./reducers/post.js"],"sourcesContent":["import { ConsoleSqlOutlined } from \"@ant-design/icons\";\r\n\r\nexport const initialState = {\r\n\r\n     mainPosts : [],  //화면에 보일 POST들 \r\n\r\n\r\n     imagePaths : [], //미리보기 이미지 경로 \r\n     addPostErrorReason : false, // POST 업로드 실패 사유 \r\n     isAddingPost : false, //post업로드중 \r\n     postAdded : false, \r\n     isAddingComment: false,\r\n     addCommentErrorReason:'',\r\n     commentAdded: false,\r\n     hasMorePost : false, \r\n\r\n\r\n};\r\n\r\nexport const LOAD_MAIN_POSTS_REQUEST = 'LOAD_MAIN_POSTS_REQUEST'; \r\nexport const LOAD_MAIN_POSTS_SUCCESS = 'LOAD_MAIN_POSTS_SUCCESS'; \r\nexport const LOAD_MAIN_POSTS_FAILURE = 'LOAD_MAIN_POSTS_FAILURE'; \r\n\r\nexport const LOAD_HASHTAG_POSTS_REQUEST = 'LOAD_HASHTAG_POSTS_REQUEST';\r\nexport const LOAD_HASHTAG_POSTS_SUCCESS = 'LOAD_HASHTAG_POSTS_SUCCESS';\r\nexport const LOAD_HASHTAG_POSTS_FAILURE = 'LOAD_HASHTAG_POSTS_FAILURE';\r\n\r\nexport const LOAD_USER_POSTS_REQUEST = 'LOAD_USER_POSTS_REQUEST'; \r\nexport const LOAD_USER_POSTS_SUCCESS = 'LOAD_USER_POSTS_SUCCESS'; \r\nexport const LOAD_USER_POSTS_FAILURE = 'LOAD_USER_POSTS_FAILURE'; \r\n\r\nexport const UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST'; \r\nexport const UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS'; \r\nexport const UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE'; \r\n\r\nexport const REMOVE_IMAGE = 'REMOVE_IMAGE'; \r\n\r\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\r\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\r\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\r\n\r\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST'; \r\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS'; \r\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE'; \r\n\r\nexport const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST'; \r\nexport const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS'; \r\nexport const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE'; \r\n\r\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST'; \r\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS'; \r\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE'; \r\n\r\nexport const LOAD_COMMENTS_REQUEST = 'LOAD_COMMENTS_REQUEST';\r\nexport const LOAD_COMMENTS_SUCCESS = 'LOAD_COMMENTS_SUCCESS';\r\nexport const LOAD_COMMENTS_FAILURE = 'LOAD_COMMENTS_FAILURE';\r\n\r\nexport const RETWEET_REQUEST ='RETWEET_REQUEST'; \r\nexport const RETWEET_SUCCESS ='RETWEET_SUCCESS'; \r\nexport const RETWEET_FAILURE ='RETWEET_FAILURE'; \r\n\r\nexport const REMOVE_POST_REQUEST='REMOVE_POST_REQUEST'; \r\nexport const REMOVE_POST_SUCCESS='REMOVE_POST_SUCCESS'; \r\nexport const REMOVE_POST_FAILURE='REMOVE_POST_FAILURE'; \r\n\r\n\r\nconst dummyPost = {\r\n    id:4,\r\n    User: {\r\n        id:1,\r\n        nickname:'주닐정', \r\n\r\n    }, \r\n    content:'나는 더미 입니다.', \r\n    Comments:[], \r\n}\r\n\r\nconst dummyComment = {\r\n                        id:1,\r\n                        User: {\r\n                            id:1,\r\n                            nickname:'주닐정',\r\n\r\n                        }, \r\n                        createdAt: new Date(),\r\n                        content : '더미 댓글 입니다...',\r\n\r\n}\r\n\r\n//const ADD_DUMMY = 'ADD_DUMMY'; \r\n\r\n\r\nconst addPost = {\r\n\r\n    type:ADD_POST_REQUEST,\r\n\r\n}\r\n\r\n// const addDummy ={\r\n//     type:ADD_DUMMY, \r\n//     data : {\r\n//         content : 'Hello', \r\n//         UserId : 1, \r\n//         User : {\r\n//             nickname:'정준일', \r\n//         },\r\n//     },\r\n// }\r\n\r\n\r\nconst reducer = (state = initialState , action) =>{\r\n\r\n    switch(action.type){\r\n        case ADD_POST_REQUEST : {\r\n            return {\r\n                ...state,\r\n                isAddingPost:true, \r\n                addPostErrorReason:'', \r\n                postAdded: false, \r\n            }\r\n        }\r\n\r\n        case ADD_POST_SUCCESS : {\r\n            console.log('ADD_POST_SUCCESS ==>' , action);\r\n            return {\r\n                ...state,\r\n                isAddingPost:false,\r\n                mainPosts:[action.data, ...state.mainPosts],\r\n                postAdded:true, \r\n                imagePaths:[],\r\n            }\r\n        }\r\n        case ADD_POST_FAILURE : {\r\n            return {\r\n                ...state,\r\n                isAddingPost:false,\r\n                addPostErrorReason :action.error,\r\n            }\r\n        }\r\n\r\n //---------댓글 달기 액션    \r\n\r\n        case ADD_COMMENT_REQUEST : {\r\n            console.log('ADD_COMMENT_REQUEST==>' , ADD_COMMENT_REQUEST); \r\n            return {\r\n                ...state,\r\n                isAddingComment : true,\r\n                addCommentErrorReason:'',\r\n                commentAdded: false, \r\n\r\n            }\r\n        }\r\n\r\n        case ADD_COMMENT_SUCCESS : {\r\n            const postIndex = state.mainPosts.findIndex(v=>v.id===action.data.postId); \r\n            const post = state.mainPosts[postIndex]; \r\n            const Comments = [...post.Comments,action.data.comment]; \r\n            const mainPosts = [...state.mainPosts]; \r\n            mainPosts[postIndex] = {...post,Comments}; \r\n\r\n            return {\r\n                ...state,\r\n                isAddingComment : false, \r\n                mainPosts,\r\n                commentAdded: true, \r\n\r\n            }\r\n        }\r\n        case ADD_COMMENT_FAILURE : {\r\n            return {\r\n                ...state,\r\n                isAddingComment:false, \r\n                addCommentErrorReason:action.error,\r\n\r\n            }\r\n        }\r\n//---------댓글 달기 액션\r\n\r\n        case LOAD_COMMENTS_SUCCESS :{\r\n            const postIndex = state.mainPosts.findIndex(v=>v.id===action.data.postId); \r\n            const post = state.mainPosts[postIndex]; \r\n            const Comments  = action.data.comments; \r\n            const mainPosts = [...state.mainPosts]; \r\n            mainPosts[postIndex] = {...post,Comments}; \r\n            return{\r\n                ...state,\r\n                mainPosts,\r\n            };\r\n        }\r\n\r\n\r\n            case LOAD_MAIN_POSTS_REQUEST :\r\n            case LOAD_HASHTAG_POSTS_REQUEST :\r\n            case LOAD_USER_POSTS_REQUEST : {\r\n                return {\r\n                    ...state,\r\n                    mainPosts:action.lastId === 0 ? [] : state.mainPosts,\r\n                    hasMorePost : action.lastId ? state.hasMorePost : true,\r\n                }\r\n            }\r\n\r\n            case LOAD_MAIN_POSTS_SUCCESS :\r\n            case LOAD_HASHTAG_POSTS_SUCCESS :\r\n            case LOAD_USER_POSTS_SUCCESS : {\r\n            return {\r\n                ...state,\r\n                mainPosts:state.mainPosts.concat(action.data),\r\n                hasMorePost : action.data.length === 1,\r\n\r\n            }\r\n        }\r\n\r\n            case LOAD_MAIN_POSTS_FAILURE :\r\n            case LOAD_HASHTAG_POSTS_FAILURE :\r\n            case LOAD_USER_POSTS_FAILURE : {\r\n            return {\r\n                ...state,\r\n            }\r\n        }\r\n\r\n\r\n//이미지 업로드------------------------------------------\r\n        case UPLOAD_IMAGES_REQUEST : {\r\n            return {\r\n                ...state,\r\n            }\r\n        }\r\n\r\n        case UPLOAD_IMAGES_SUCCESS : {\r\n            return {\r\n                ...state,\r\n                imagePaths: [...state.imagePaths, ...action.data],\r\n            }\r\n        }\r\n        case UPLOAD_IMAGES_FAILURE : {\r\n            return {\r\n                ...state,\r\n\r\n            }\r\n        }\r\n\r\n        case REMOVE_IMAGE : {\r\n            return{\r\n                ...state,\r\n                imagePaths:state.imagePaths.filter((v,i)=> i !== action.index),\r\n            }\r\n        }\r\n//이미지 업로드------------------------------------------\r\n\r\n//게시글 좋아요------------------------------------------\r\n        case LIKE_POST_REQUEST : {\r\n\r\n\r\n            return {\r\n                ...state,\r\n            }\r\n        }\r\n\r\n        case LIKE_POST_SUCCESS : {\r\n            const postIndex = state.mainPosts.findIndex(v => v.id === action.data.postId);\r\n            const post = state.mainPosts[postIndex];\r\n            const Likers = [{ id: action.data.userId }, ...post.Likers];\r\n            const mainPosts = [...state.mainPosts];\r\n            mainPosts[postIndex] = { ...post, Likers };\r\n      return {\r\n        ...state,\r\n        mainPosts,\r\n      };\r\n    }\r\n        case LIKE_POST_FAILURE : {\r\n            return {\r\n                ...state,\r\n            }\r\n        }\r\n//게시글 좋아요------------------------------------------\r\n\r\n\r\n\r\n//게시글 좋아요 취소------------------------------------------\r\n        case UNLIKE_POST_REQUEST : {\r\n\r\n\r\n            return {\r\n                ...state,\r\n            \r\n            }\r\n        }\r\n\r\n        case UNLIKE_POST_SUCCESS : {\r\n            const postIndex = state.mainPosts.findIndex(v => v.id === action.data.postId);\r\n            const post = state.mainPosts[postIndex];\r\n            const Likers = post.Likers.filter(v => v.id !== action.data.userId);\r\n            const mainPosts = [...state.mainPosts];\r\n            mainPosts[postIndex] = { ...post, Likers };\r\n            return {\r\n              ...state,\r\n              mainPosts,\r\n            };\r\n          }\r\n        case UNLIKE_POST_FAILURE : {\r\n            return {\r\n                ...state,\r\n\r\n            }\r\n        }\r\n//게시글 좋아요 취소------------------------------------------\r\n\r\n\r\n\r\n\r\n//리트윗------------------------------------------\r\n        case RETWEET_REQUEST : {\r\n\r\n\r\n            return {\r\n                ...state,\r\n            \r\n            }\r\n        }\r\n\r\n        case RETWEET_SUCCESS : {\r\n\r\n            return {\r\n                ...state,\r\n                mainPosts : [action.data, ...state.mainPosts.PostId],\r\n            };\r\n        }\r\n        case RETWEET_FAILURE : {\r\n            return {\r\n                ...state,\r\n\r\n            }\r\n        }\r\n//리트윗------------------------------------------\r\n\r\n\r\n//게시글 삭제------------------------------------------\r\n        case REMOVE_POST_REQUEST : {\r\n\r\n\r\n            return {\r\n                ...state,\r\n            \r\n            }\r\n        }\r\n\r\n        case REMOVE_POST_SUCCESS : {\r\n            \r\n            console.log('REMOVE_POST_SUCCESS===>' , action.data);\r\n            return {\r\n                ...state,\r\n                mainPosts : state.mainPosts.filter((v)=>v.id !== action.data), \r\n            };\r\n        }\r\n        case REMOVE_POST_FAILURE : {\r\n            return {\r\n                ...state,\r\n\r\n            }\r\n        }\r\n//게시글 삭제------------------------------------------\r\n\r\n\r\n\r\n\r\n\r\n\r\n        \r\n        default : {\r\n            return {\r\n                ...state\r\n            }\r\n        }\r\n    \r\n    }\r\n\r\n\r\n}\r\n\r\nexport default reducer; "],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AAEA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAZA;AAiBA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAFA;AAKA;AACA;AARA;AAWA;AACA;AACA;AACA;AACA;AAFA;AAKA;AACA;AARA;AACA;AAcA;AAEA;AAFA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AALA;AAOA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAHA;AAKA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AAJA;AAOA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AAFA;AAIA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AAAA;AACA;AAGA;AAGA;AACA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AACA;AAEA;AAFA;AAIA;AACA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AAFA;AAIA;AACA;AAEA;AACA;AAAA;AAAA;AAGA;AAGA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AAFA;AAIA;AACA;AAAA;AAAA;AACA;AAGA;AACA;AAIA;AACA;AAAA;AAAA;AAGA;AAIA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AAFA;AAIA;AACA;AAAA;AAAA;AACA;AAIA;AACA;AAKA;AACA;AAAA;AAAA;AAGA;AAIA;AACA;AACA;AAAA;AAEA;AAEA;AAFA;AAIA;AACA;AAAA;AAAA;AACA;AAIA;AACA;AAGA;AACA;AAAA;AAAA;AAGA;AAIA;AACA;AACA;AAAA;AAEA;AACA;AAEA;AAAA;AAAA;AAFA;AAIA;AACA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AAOA;AAAA;AACA;AAGA;AApQA;AAyQA;AACA;AACA;;;;A","sourceRoot":""}